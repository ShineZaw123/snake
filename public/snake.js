/* Generated by the Nim Compiler v0.16.1 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI165568 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI165399 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI61241 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI61240 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI165396 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI39002 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI167007 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI38016 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI166003 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3462 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI162963 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI160068 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3450 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI152238 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI160137 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI151914 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI151865 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI151869 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI151867 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI66002 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI151895 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI151892 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI151889 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI160004 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI160022 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI7488 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI160002 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI160006 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI24385 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24381 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24377 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24373 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24369 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24365 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24361 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24357 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24353 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24349 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24345 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24341 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24337 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24333 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24329 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24325 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24321 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24317 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24313 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24309 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI24204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI24260 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI24258 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI24218 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI24434 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI24432 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI24220 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI24430 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI24222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI24248 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI24246 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI24481 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI24514 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI24252 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI24250 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI24216 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI24214 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI24230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI24228 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI163217 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI38043 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3487 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3442.node = NNI3442;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3487.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3487, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3438.base = NTI3424;
NTI3442.base = NTI3438;
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
NTI3440.base = NTI3438;
var NNI38043 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI124, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI124, name: "y", sons: null}]};
NTI38043.node = NNI38043;
var NNI24216 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI24216.node = NNI24216;
NTI24216.base = NTI3408;
NTI24214.base = NTI24216;
NTI24514.base = NTI24228;
var NNI24252 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action", len: 0, typ: NTI140, name: "action", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI140, name: "encoding", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI140, name: "method", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI140, name: "target", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI24514, name: "elements", sons: null}]};
NTI24252.node = NNI24252;
NTI24252.base = NTI24230;
NTI24250.base = NTI24252;
var NNI24248 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI130, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI130, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI104, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI140, name: "value", sons: null}]};
NTI24248.node = NNI24248;
NTI24248.base = NTI24230;
NTI24246.base = NTI24248;
NTI24481.base = NTI24246;
var NNI24230 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI24214, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI130, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI130, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI140, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI130, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI24250, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI130, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI24481, name: "options", sons: null}]};
NTI24230.node = NNI24230;
NTI24220.base = NTI24222;
NTI24430.base = NTI24220;
NTI24432.base = NTI24220;
NTI24434.base = NTI24220;
var NNI24218 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI24218, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI24218, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI24218, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI24218, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI24218, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI24218, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI24218, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI24218, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI24218, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI24218, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI24218, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI24218, name: "NotationNode", len: 0, sons: null}}};
NTI24218.node = NNI24218;
var NNI24260 = {kind: 2, len: 89, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI24260.node = NNI24260;
NTI24260.base = NTI3408;
NTI24258.base = NTI24260;
var NNI24222 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI24430, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI24432, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI24434, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI24220, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI24220, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI24220, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI24218, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI24220, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI24220, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI24258, name: "style", sons: null}]};
NTI24222.node = NNI24222;
var NNI24204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI24309, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI24313, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI24317, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI24321, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI24325, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI24329, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI24333, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI24337, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI24341, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI24345, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI24349, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI24353, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI24357, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI24361, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI24365, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI24369, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI24373, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI24377, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI24381, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI24385, name: "onunload", sons: null}]};
NTI24204.node = NNI24204;
NTI24204.base = NTI3408;
NTI24222.base = NTI24204;
NTI24230.base = NTI24222;
NTI24228.base = NTI24230;
NTI163217.base = NTI24228;
var NNI160002 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI160002, name: "Hello", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI160002, name: "ScoreUpdate", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI160002, name: "PlayerUpdate", len: 0, sons: null}}};
NTI160002.node = NNI160002;
var NNI160004 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nickname", len: 0, typ: NTI138, name: "nickname", sons: null}, 
{kind: 1, offset: "score", len: 0, typ: NTI7488, name: "score", sons: null}, 
{kind: 1, offset: "alive", len: 0, typ: NTI130, name: "alive", sons: null}, 
{kind: 1, offset: "paused", len: 0, typ: NTI130, name: "paused", sons: null}]};
NTI160004.node = NNI160004;
NTI160022.base = NTI160004;
var NNI160006 = {kind: 3, offset: "kind", len: 3, typ: NTI160002, name: "kind", sons: [[SetConstr(0), {kind: 1, offset: "nickname", len: 0, typ: NTI138, name: "nickname", sons: null}], 
[SetConstr(1), {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI7488, name: "score", sons: null}, 
{kind: 1, offset: "alive", len: 0, typ: NTI130, name: "alive", sons: null}, 
{kind: 1, offset: "paused", len: 0, typ: NTI130, name: "paused", sons: null}]}], 
[SetConstr(2), {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "players", len: 0, typ: NTI160022, name: "players", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI104, name: "count", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI160004, name: "top", sons: null}]}]]};
NTI160006.node = NNI160006;
var NNI151865 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI151865, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI151865, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI151865, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI151865, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI151865, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI151865, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI151865, name: "JArray", len: 0, sons: null}}};
NTI151865.node = NNI151865;
NTI151914.base = NTI151867;
var NNI151869 = {kind: 3, offset: "kind", len: 7, typ: NTI151865, name: "kind", sons: [[SetConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI138, name: "str", sons: null}], 
[SetConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI7488, name: "num", sons: null}], 
[SetConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI124, name: "fnum", sons: null}], 
[SetConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI130, name: "bval", sons: null}], 
[SetConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[SetConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI151889, name: "fields", sons: null}], 
[SetConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI151914, name: "elems", sons: null}]]};
NTI151869.node = NNI151869;
NTI151867.base = NTI151869;
var NNI151895 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI66002, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI151867, name: "Field3", sons: null}]};
NTI151895.node = NNI151895;
NTI151892.base = NTI151895;
var NNI151889 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI151892, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI151889.node = NNI151889;
NTI160137.base = NTI151867;
NTI152238.base = NTI151867;
var NNI3450 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3450.node = NNI3450;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
NTI3448.base = NTI3424;
NTI3450.base = NTI3448;
NTI160068.base = NTI160004;
NTI162963.base = NTI160004;
var NNI3458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3458.node = NNI3458;
NTI3458.base = NTI3424;
var NNI3462 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3462.node = NNI3462;
NTI3462.base = NTI3424;
var NNI166003 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"-1": {kind: 1, offset: -1, typ: NTI166003, name: "Unknown", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI166003, name: "KeySpace", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI166003, name: "LeftArrow", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI166003, name: "UpArrow", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI166003, name: "RightArrow", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI166003, name: "DownArrow", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI166003, name: "KeyN", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI166003, name: "KeyP", len: 0, sons: null}}};
NTI166003.node = NNI166003;
var NNI38016 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI104, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI104, name: "y", sons: null}]};
NTI38016.node = NNI38016;
var NNI39002 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI39002, name: "dirNorth", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI39002, name: "dirEast", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI39002, name: "dirSouth", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI39002, name: "dirWest", len: 0, sons: null}}};
NTI39002.node = NNI39002;
var NNI167007 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI130, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI39002, name: "Field1", sons: null}]};
NTI167007.node = NNI167007;
NTI165396.base = NTI104;
NTI61241.base = NTI104;
var NNI61240 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI61241, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI61241, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI61241, name: "Field2", sons: null}]};
NTI61240.node = NNI61240;
NTI165399.base = NTI104;
NTI165568.base = NTI38043;
function makeNimstrLit(c_13803) {

    var ln = c_13803.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13803.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_19018, src_19019, ti_19020) {

var result_19429 = null;
switch (ti_19020.kind) {
case 21: case 22: case 23: case 5: if (!(isFatPointer_19001(ti_19020))) {
result_19429 = src_19019;
}
else {
result_19429 = [src_19019[0], src_19019[1]];}


break;
case 19:       if (dest_19018 === null || dest_19018 === undefined) {
        dest_19018 = {};
      }
      else {
        for (var key in dest_19018) { delete dest_19018[key]; }
      }
      for (var key in src_19019) { dest_19018[key] = src_19019[key]; }
      result_19429 = dest_19018;
    
break;
case 18: case 17: if (!((ti_19020.base == null))) {
result_19429 = nimCopy(dest_19018, src_19019, ti_19020.base);
}
else {
if ((ti_19020.kind == 17)) {
result_19429 = (dest_19018 === null || dest_19018 === undefined) ? {m_type: ti_19020} : dest_19018;}
else {
result_19429 = (dest_19018 === null || dest_19018 === undefined) ? {} : dest_19018;}
}
nimCopyAux(result_19429, src_19019, ti_19020.node);

break;
case 24: case 4: case 27: case 16:       if (src_19019 === null) {
        result_19429 = null;
      }
      else {
        if (dest_19018 === null || dest_19018 === undefined) {
          dest_19018 = new Array(src_19019.length);
        }
        else {
          dest_19018.length = src_19019.length;
        }
        result_19429 = dest_19018;
        for (var i = 0; i < src_19019.length; ++i) {
          result_19429[i] = nimCopy(result_19429[i], src_19019[i], ti_19020.base);
        }
      }
    
break;
case 28:       if (src_19019 !== null) {
        result_19429 = src_19019.slice(0);
      }
    
break;
default: 
result_19429 = src_19019;
break;
}
return result_19429;
}
function eqStrings(a_16403, b_16404) {

    if (a_16403 == b_16404) return true;
    if ((!a_16403) || (!b_16404)) return false;
    var alen = a_16403.length;
    if (alen != b_16404.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16403[i] != b_16404[i]) return false;
    return true;
  }
function toJSStr(s_14203) {

    var len = s_14203.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_14203[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_14203[i] < 128)
        asciiPart[i] = fcc(s_14203[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_13206, ename_13207) {

e_13206.name = ename_13207;
if ((excHandler == 0)) {
unhandledException(e_13206);
}

throw e_13206;}
function cstrToNimstr(c_14003) {

  var ln = c_14003.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_14003.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function nimMin(a_18639, b_18640) {

var Tmp1;
var result_18641 = 0;
BeforeRet: do {
if ((a_18639 <= b_18640)) {
Tmp1 = a_18639;
}
else {
Tmp1 = b_18640;
}

result_18641 = Tmp1;
break BeforeRet;
} while (false); 
return result_18641;
}
function mnewString(len_14403) {

      var result = new Array(len_14403+1);
      result[0] = 0;
      result[len_14403] = 0;
      return result;
    }
function addChar(x_19718, c_19719) {

    x_19718[x_19718.length-1] = c_19719; x_19718.push(0);
  }
function isObj(obj_19677, subclass_19678) {

var result_19679 = false;
BeforeRet: do {
var x_19680 = obj_19677;
if ((x_19680 == subclass_19678)) {
result_19679 = true;
break BeforeRet;
}

L1: do {
L2: while (true) {
if (!!((x_19680 == subclass_19678))) break L2;
if ((x_19680 == null)) {
result_19679 = false;
break BeforeRet;
}

x_19680 = x_19680.base;
}
} while(false);
result_19679 = true;
break BeforeRet;
} while (false); 
return result_19679;
}
function reraiseException() {

if ((lastJSError == null)) {
var e_13621 = null;
e_13621 = {m_type: NTI3462, parent: null, name: null, message: null, trace: null};
e_13621.message = nimCopy(null, makeNimstrLit("no exception to reraise"), NTI138);
e_13621.parent = null;
raiseException(e_13621, "ReraiseError");
}
else {
if ((excHandler == 0)) {
if (isNimException_12453()) {
unhandledException(lastJSError);
}

}

throw lastJSError;}

}
var nibble_165395 = nimCopy(null, [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], NTI165396);
var special_165398 = nimCopy(null, [9, 9, 9, 2, 2, 2, 2, 3, 3, 3, 9, 9, 9, 2, 2, 2, 2, 3, 3, 3, 9, 9, 9, 2, 2, 2, 2, 3, 3, 3, 8, 8, 8, 1, 1, 1, 1, 4, 4, 4, 8, 8, 8, 1, 1, 1, 1, 4, 4, 4, 8, 8, 8, 1, 1, 1, 1, 4, 4, 1, 8, 8, 8, 1, 1, 1, 1, 4, 4, 4, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5], NTI165399);
var nimvm_5887 = false;
var nim_program_result = 0;
var globalRaiseHook_10805 = [null];
var localRaiseHook_10810 = [null];
var outOfMemHook_10813 = [null];
function isFatPointer_19001(ti_19003) {

var result_19004 = false;
BeforeRet: do {
result_19004 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_19003.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_19004;
}
function nimCopyAux(dest_19023, src_19024, n_19026) {

switch (n_19026.kind) {
case 0: 
break;
case 1:       dest_19023[n_19026.offset] = nimCopy(dest_19023[n_19026.offset], src_19024[n_19026.offset], n_19026.typ);
    
break;
case 2: L1: do {
var i_19415 = 0;
var colontmp__19417 = 0;
colontmp__19417 = (n_19026.len - 1);
var res_19420 = 0;
L2: do {
L3: while (true) {
if (!(res_19420 <= colontmp__19417)) break L3;
i_19415 = res_19420;
nimCopyAux(dest_19023, src_19024, n_19026.sons[i_19415]);
res_19420 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_19023[n_19026.offset] = nimCopy(dest_19023[n_19026.offset], src_19024[n_19026.offset], n_19026.typ);
      for (var i = 0; i < n_19026.sons.length; ++i) {
        nimCopyAux(dest_19023, src_19024, n_19026.sons[i][1]);
      }
    
break;
}
}
function add_10829(x_10832, x_10832_Idx, y_10833) {

        var len = x_10832[0].length-1;
        for (var i = 0; i < y_10833.length; ++i) {
          x_10832[0][len] = y_10833.charCodeAt(i);
          ++len;
        }
        x_10832[0][len] = 0
      }
function unhandledException(e_13054) {

var Tmp1;
var buf_13055 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_13054.message, null))) Tmp1 = false; else {Tmp1 = !((e_13054.message[0] == 0)); }if (Tmp1) {
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_13055[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(e_13054.message); } else { buf_13055[0] = e_13054.message;};
}
else {
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_13055[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_13055[0] = makeNimstrLit(" [");};
add_10829(buf_13055, 0, e_13054.name);
if (buf_13055[0] != null) { buf_13055[0] = (buf_13055[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_13055[0] = makeNimstrLit("]\x0A");};
var cbuf_13201 = toJSStr(buf_13055[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_13201);
  }
  else {
    throw cbuf_13201;
  }
  }
function raiseOverflow() {

var e_13641 = null;
e_13641 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null};
e_13641.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
e_13641.parent = null;
raiseException(e_13641, "OverflowError");
}
function raiseDivByZero() {

var e_13659 = null;
e_13659 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13659.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
e_13659.parent = null;
raiseException(e_13659, "DivByZeroError");
}
var lc_33247 = [{}];
var state_41605 = /**/[{a0: 1773455756, a1: 4275166512}];
function getTime_57642() {

var result_58013 = null;
BeforeRet: do {
result_58013 = new Date();
break BeforeRet;
} while (false); 
return result_58013;
}
var startMilsecs_58048 = /**/[getTime_57642()];
var objectID_66233 = /**/[0];
function rotl_41802(x_41804, k_41805) {

var result_41806 = 0;
result_41806 = ((x_41804 << k_41805) | ((x_41804 >>> 0) >>> ((64 - k_41805) >>> 0)));
return result_41806;
}
function next_41846(s_41849) {

var result_41850 = 0;
var s0_41851 = s_41849.a0;
var s1_41852 = s_41849.a1;
result_41850 = ((s0_41851 + s1_41852) >>> 0);
s1_41852 = (s1_41852 ^ s0_41851);
s_41849.a0 = ((rotl_41802(s0_41851, 55) ^ s1_41852) ^ (s1_41852 << 14));
s_41849.a1 = rotl_41802(s1_41852, 36);
return result_41850;
}
function randomize_42427(seed_42429) {

state_41605[0].a0 = ((seed_42429 >>> 0) >>> 16);
state_41605[0].a1 = (seed_42429 & 65535);
next_41846(state_41605[0]);
}
function randomize_60001() {

randomize_42427(getTime_57642().getTime());
}
function getWidth_77042(preferredWidth_77044) {

var Tmp1;
var result_77045 = 0;
if ((preferredWidth_77044 == -1)) {
Tmp1 = window.innerWidth;
}
else {
Tmp1 = preferredWidth_77044;
}

result_77045 = Tmp1;
return result_77045;
}
function getHeight_77046(preferredHeight_77048) {

var Tmp1;
var result_77049 = 0;
if ((preferredHeight_77048 == -1)) {
Tmp1 = window.innerHeight;
}
else {
Tmp1 = preferredHeight_77048;
}

result_77049 = Tmp1;
return result_77049;
}
function slash__20807(x_20809, y_20810) {

var result_20811 = 0.0;
result_20811 = (x_20809 / y_20810);
return result_20811;
}
function resizeCanvas_77050(renderer_77052) {

renderer_77052.canvas.width = getWidth_77042(renderer_77052.preferredWidth);
renderer_77052.canvas.height = getHeight_77046(renderer_77052.preferredHeight);
if (renderer_77052.scaleToScreen) {
console.log("Scaling to screen");
var screenWidth_77055 = window.innerWidth;
var screenHeight_77056 = window.innerHeight;
var ratioX_77057 = slash__20807(screenWidth_77055, renderer_77052.canvas.width);
var ratioY_77058 = slash__20807(screenHeight_77056, renderer_77052.canvas.height);
var minRatio_77063 = nimMin(ratioX_77057, ratioY_77058);
var scaledWidth_77064 = (renderer_77052.canvas.width * minRatio_77063);
var scaledHeight_77065 = (renderer_77052.canvas.height * minRatio_77063);
var left_77067 = ((screenWidth_77055 - scaledWidth_77064) / 2.0000000000000000e+00);
var top_77069 = ((screenHeight_77056 - scaledHeight_77065) / 2.0000000000000000e+00);
renderer_77052.canvas.style.width = toJSStr((cstrToNimstr((scaledWidth_77064)+"").slice(0,-1)).concat(makeNimstrLit("px")));
renderer_77052.canvas.style.height = toJSStr((cstrToNimstr((scaledHeight_77065)+"").slice(0,-1)).concat(makeNimstrLit("px")));
renderer_77052.canvas.style.marginLeft = toJSStr((cstrToNimstr((left_77067)+"").slice(0,-1)).concat(makeNimstrLit("px")));
renderer_77052.canvas.style.marginTop = toJSStr((cstrToNimstr((top_77069)+"").slice(0,-1)).concat(makeNimstrLit("px")));
renderer_77052.canvas.parentNode.style.position = "absolute";
renderer_77052.canvas.parentNode.style.left = "0";
renderer_77052.canvas.parentNode.style.top = "0";
renderer_77052.canvas.parentNode.style.width = toJSStr((cstrToNimstr((screenWidth_77055)+"").slice(0,-1)).concat(makeNimstrLit("px")));
renderer_77052.canvas.parentNode.style.height = toJSStr((cstrToNimstr((screenHeight_77056)+"").slice(0,-1)).concat(makeNimstrLit("px")));
L1: do {
var item_77202 = null;
var colontmp__77212 = null;
colontmp__77212 = renderer_77052.positionedElements;
var i_77215 = 0;
var L_77217 = (colontmp__77212 != null ? colontmp__77212.length : 0);
L2: do {
L3: while (true) {
if (!(i_77215 < L_77217)) break L3;
item_77202 = colontmp__77212[i_77215];
var element_77203 = item_77202.element;
element_77203.style.marginLeft = toJSStr((cstrToNimstr((((item_77202.originalLeft * minRatio_77063) + left_77067))+"").slice(0,-1)).concat(makeNimstrLit("px")));
element_77203.style.marginTop = toJSStr((cstrToNimstr((((item_77202.originalTop * minRatio_77063) + top_77069))+"").slice(0,-1)).concat(makeNimstrLit("px")));
if ((0.0 < item_77202.originalFontSize)) {
element_77203.style.fontSize = toJSStr((cstrToNimstr(((item_77202.originalFontSize * minRatio_77063))+"").slice(0,-1)).concat(makeNimstrLit("px")));
}

if ((0.0 < item_77202.originalWidth)) {
element_77203.style.width = toJSStr((cstrToNimstr(((item_77202.originalWidth * minRatio_77063))+"").slice(0,-1)).concat(makeNimstrLit("px")));
}

if ((0.0 < item_77202.originalHeight)) {
element_77203.style.height = toJSStr((cstrToNimstr(((item_77202.originalHeight * minRatio_77063))+"").slice(0,-1)).concat(makeNimstrLit("px")));
}

i_77215 += 1;
}
} while(false);
} while(false);
}

}
function newRenderer2D_77218(id_77220, width_77221, height_77222, hidpi_77223) {

function colonanonymous__77268(ev_77270) {

resizeCanvas_77050(capturedResult_77267);
}
var result_77224 = null;
var canvas_77225 = document.getElementById(toJSStr(id_77220));
var context_77226 = canvas_77225.getContext("2d", {alpha: false});
if (hidpi_77223) {
var ratio_77227 = 6.0000000000000000e+00;
canvas_77225.width = ((getWidth_77042(width_77221) * ratio_77227)|0);
canvas_77225.height = ((getHeight_77046(height_77222) * ratio_77227)|0);
canvas_77225.style.width = toJSStr((cstrToNimstr((getWidth_77042(width_77221))+"").slice(0,-1)).concat(makeNimstrLit("px")));
canvas_77225.style.height = toJSStr((cstrToNimstr((getHeight_77046(height_77222))+"").slice(0,-1)).concat(makeNimstrLit("px")));
context_77226.setTransform(ratio_77227, 0.0, 0.0, ratio_77227, 0.0, 0.0);
}

result_77224 = {canvas: canvas_77225, context: context_77226, preferredWidth: width_77221, preferredHeight: height_77222, scaleToScreen: false, positionedElements: [], rotation: 0.0};
var capturedResult_77267 = result_77224;
window.addEventListener("resize", colonanonymous__77268, false);
resizeCanvas_77050(result_77224);
return result_77224;
}
function newSnakeSegment_162155(pos_162159) {

var result_162160 = null;
result_162160 = {pos: pos_162159};
return result_162160;
}
function toPoint_38035(point_38038) {

var result_38048 = {x: 0.0, y: 0.0};
nimCopy(result_38048, {x: point_38038["Field0"], y: point_38038["Field1"]}, NTI38043);
return result_38048;
}
function initDeque_162434(initialSize_162438) {

var result_162440 = {data: null, head: 0, tail: 0, count: 0, mask: 0};
result_162440.mask = (initialSize_162438 - 1);
result_162440.data = new Array(initialSize_162438); for (var i=0;i<initialSize_162438;++i) {result_162440.data[i]=0;}return result_162440;
}
function newSnake_162416() {

var result_162418 = null;
var head_162422 = newSnakeSegment_162155(toPoint_38035({Field0: 0.0, Field1: 9.0000000000000000e+00}));
var segment_162427 = newSnakeSegment_162155(toPoint_38035({Field0: -1.0000000000000000e+00, Field1: 9.0000000000000000e+00}));
var segment2_162432 = newSnakeSegment_162155(toPoint_38035({Field0: -2.0000000000000000e+00, Field1: 9.0000000000000000e+00}));
result_162418 = {direction: 1, requestedDirections: initDeque_162434(4), body: [head_162422, segment_162427, segment2_162432], alive: true};
return result_162418;
}
function setProperties_163252(renderer_163256, element_163258, pos_163260, width_163262, height_163264, fontSize_163266) {

element_163258.style.position = "absolute";
element_163258.style.margin = "0";
element_163258.style.marginLeft = toJSStr((cstrToNimstr((pos_163260.x)+"").slice(0,-1)).concat(makeNimstrLit("px")));
element_163258.style.marginTop = toJSStr((cstrToNimstr((pos_163260.y)+"").slice(0,-1)).concat(makeNimstrLit("px")));
element_163258.style.fontSize = toJSStr((cstrToNimstr((fontSize_163266)+"").slice(0,-1)).concat(makeNimstrLit("px")));
if ((0.0 <= width_163262)) {
element_163258.style.width = toJSStr((cstrToNimstr((width_163262)+"").slice(0,-1)).concat(makeNimstrLit("px")));
}

if ((0.0 <= height_163264)) {
element_163258.style.height = toJSStr((cstrToNimstr((height_163264)+"").slice(0,-1)).concat(makeNimstrLit("px")));
}

element_163258.classList.add("gamelight-graphics-element");
if (renderer_163256.positionedElements != null) { renderer_163256.positionedElements.push({originalLeft: pos_163260.x, originalTop: pos_163260.y, element: element_163258, originalFontSize: fontSize_163266, originalWidth: width_163262, originalHeight: height_163264}); } else { renderer_163256.positionedElements = [{originalLeft: pos_163260.x, originalTop: pos_163260.y, element: element_163258, originalFontSize: fontSize_163266, originalWidth: width_163262, originalHeight: height_163264}]; };
resizeCanvas_77050(renderer_163256);
}
function createTextElement_163232(renderer_163236, text_163238, pos_163240, style_163242, fontSize_163244, fontFamily_163246, width_163248) {

var result_163249 = null;
BeforeRet: do {
var p_163250 = document.createElement("p");
p_163250.innerHTML = toJSStr(text_163238);
setProperties_163252(renderer_163236, p_163250, pos_163240, width_163248, 0.0, fontSize_163244);
p_163250.style.fontFamily = toJSStr(fontFamily_163246);
p_163250.style.color = toJSStr(style_163242);
renderer_163236.canvas.parentNode.insertBefore(p_163250, renderer_163236.canvas);
result_163249 = p_163250;
break BeforeRet;
} while (false); 
return result_163249;
}
function createTextBox_163328(renderer_163332, pos_163334, width_163336, height_163338, fontSize_163340) {

var result_163341 = null;
BeforeRet: do {
var input_163342 = document.createElement("input");
input_163342.type = "text";
setProperties_163252(renderer_163332, input_163342, pos_163334, width_163336, height_163338, fontSize_163340);
renderer_163332.canvas.parentNode.insertBefore(input_163342, renderer_163332.canvas);
result_163341 = input_163342;
break BeforeRet;
} while (false); 
return result_163341;
}
function createButton_163398(renderer_163402, pos_163404, text_163406, width_163408, height_163410, fontSize_163412, fontFamily_163414) {

var result_163415 = null;
BeforeRet: do {
var input_163416 = document.createElement("input");
input_163416.type = "button";
input_163416.value = toJSStr(text_163406);
setProperties_163252(renderer_163402, input_163416, pos_163404, width_163408, height_163410, fontSize_163412);
input_163416.style.fontFamily = toJSStr(fontFamily_163414);
renderer_163402.canvas.parentNode.insertBefore(input_163416, renderer_163402.canvas);
result_163415 = input_163416;
break BeforeRet;
} while (false); 
return result_163415;
}
function isTouchDevice_78002() {

var result_78004 = false;
    result_78004 = 'ontouchstart' in window || navigator.maxTouchPoints;
  return result_78004;
}
function setScaleToScreen_77598(renderer_77600, value_77601) {

renderer_77600.scaleToScreen = value_77601;
resizeCanvas_77050(renderer_77600);
}
function random_42282(max_42284) {

var result_42285 = 0;
BeforeRet: do {
L1: do {
L2: while (true) {
if (!true) break L2;
var x_42287 = next_41846(state_41605[0]);
if ((x_42287 < ((4294967295 - (4294967295 % max_42284)) >>> 0))) {
result_42285 = ((x_42287 % max_42284)|0);
break BeforeRet;
}

}
} while(false);
} while (false); 
return result_42285;
}
function random_162648(x_162653) {

var result_162654 = 0;
result_162654 = (random_42282((x_162653.b - x_162653.a)) + x_162653.a);
return result_162654;
}
function dotdot__51457(a_51461, b_51463) {

var result_51465 = {a: 0, b: 0};
result_51465.a = a_51461;
result_51465.b = b_51463;
return result_51465;
}
function eqeq__162804(x_162808, y_162810) {

var result_162811 = false;
BeforeRet: do {
if (!((x_162808.x == y_162810.x))) {
result_162811 = false;
break BeforeRet;
}

if (!((x_162808.y == y_162810.y))) {
result_162811 = false;
break BeforeRet;
}

result_162811 = true;
break BeforeRet;
} while (false); 
return result_162811;
}
function generateFoodPos_162629(game_162631) {

var result_162634 = {x: 0.0, y: 0.0};
var i_162635 = 0;
L1: do {
L2: while (true) {
if (!(i_162635 < 5)) break L2;
nimCopy(result_162634, toPoint_38035({Field0: random_162648(dotdot__51457(0, 30)), Field1: random_162648(dotdot__51457(0, 18))}), NTI38043);
var hit_162674 = false;
L3: do {
var segment_162802 = null;
var colontmp__162836 = null;
colontmp__162836 = game_162631.player.body;
var i_162839 = 0;
var L_162841 = (colontmp__162836 != null ? colontmp__162836.length : 0);
L4: do {
L5: while (true) {
if (!(i_162839 < L_162841)) break L5;
segment_162802 = colontmp__162836[i_162839];
if (eqeq__162804(segment_162802.pos, result_162634)) {
hit_162674 = true;
break L3;
}

i_162839 += 1;
}
} while(false);
} while(false);
if (!(hit_162674)) {
break L1;
}

i_162635 += 1;
}
} while(false);
return result_162634;
}
function createFood_162913(game_162915, kind_162916, foodIndex_162917) {

var pos_162918 = generateFoodPos_162629(game_162915);
game_162915.food[foodIndex_162917] = {kind: kind_162916, pos: pos_162918, ticksLeft: -1};
if ((kind_162916 == 1)) {
game_162915.food[foodIndex_162917].ticksLeft = 20;
}

}
function createHelloMessage_160246(nickname_160248) {

var result_160249 = {kind: 0, nickname: null, score: 0, alive: false, paused: false, players: null, count: 0, top: {nickname: null, score: 0, alive: false, paused: false}};
nimCopy(result_160249, {kind: 0, nickname: nickname_160248, score: 0, alive: false, paused: false, players: null, count: 0, top: {nickname: null, score: 0, alive: false, paused: false}}, NTI160006);
return result_160249;
}
function initOrderedTable_152034(initialSize_152039) {

var result_152041 = {data: null, counter: 0, first: 0, last: 0};
result_152041.counter = 0;
result_152041.first = -1;
result_152041.last = -1;
result_152041.data = new Array(initialSize_152039); for (var i=0;i<initialSize_152039;++i) {result_152041.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}return result_152041;
}
function newJObject_152021() {

var result_152023 = null;
result_152023 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_152023.kind = 5;
nimCopy(result_152023.fields, initOrderedTable_152034(4), NTI151889);
return result_152023;
}
function emarkamp__66005(h_66007, val_66008) {

var result_66009 = 0;
result_66009 = ((h_66007 + val_66008) >>> 0);
result_66009 = ((result_66009 + (result_66009 << 10)) >>> 0);
result_66009 = (result_66009 ^ ((result_66009 >>> 0) >>> 6));
return result_66009;
}
function emarkdollar__66046(h_66048) {

var result_66049 = 0;
result_66049 = ((h_66048 + (h_66048 << 3)) >>> 0);
result_66049 = (result_66049 ^ ((result_66049 >>> 0) >>> 11));
result_66049 = ((result_66049 + (result_66049 << 15)) >>> 0);
return result_66049;
}
function hash_66837(x_66839) {

var result_66840 = 0;
var h_66841 = 0;
L1: do {
var i_66851 = 0;
var colontmp__66862 = 0;
colontmp__66862 = ((x_66839 != null ? x_66839.length-1 : 0) - 1);
var res_66865 = 0;
L2: do {
L3: while (true) {
if (!(res_66865 <= colontmp__66862)) break L3;
i_66851 = res_66865;
h_66841 = emarkamp__66005(h_66841, x_66839[i_66851]);
res_66865 += 1;
}
} while(false);
} while(false);
result_66840 = emarkdollar__66046(h_66841);
return result_66840;
}
function isFilled_81465(hcode_81467) {

var result_81468 = false;
result_81468 = !((hcode_81467 == 0));
return result_81468;
}
function nextTry_81601(h_81603, maxHash_81604) {

var result_81605 = 0;
result_81605 = ((h_81603 + 1) & maxHash_81604);
return result_81605;
}
function rawGet_152516(t_152522, key_152524, hc_152526, hc_152526_Idx) {

var Tmp3;
var result_152527 = 0;
BeforeRet: do {
hc_152526[hc_152526_Idx] = hash_66837(key_152524);
if ((hc_152526[hc_152526_Idx] == 0)) {
hc_152526[hc_152526_Idx] = 314159265;
}

var h_152531 = (hc_152526[hc_152526_Idx] & (t_152522.data != null ? (t_152522.data.length-1) : -1));
L1: do {
L2: while (true) {
if (!isFilled_81465(t_152522.data[h_152531].Field0)) break L2;
if (!(t_152522.data[h_152531].Field0 == hc_152526[hc_152526_Idx])) Tmp3 = false; else {Tmp3 = eqStrings(t_152522.data[h_152531].Field2, key_152524); }if (Tmp3) {
result_152527 = h_152531;
break BeforeRet;
}

h_152531 = nextTry_81601(h_152531, (t_152522.data != null ? (t_152522.data.length-1) : -1));
}
} while(false);
result_152527 = (-1 - h_152531);
} while (false); 
return result_152527;
}
function mustRehash_81470(length_81472, counter_81473) {

var result_81474 = false;
result_81474 = (((length_81472 * 2) < (counter_81473 * 3)) || ((length_81472 - counter_81473) < 4));
return result_81474;
}
function rawGetKnownHC_152588(t_152594, key_152596, hc_152598) {

var result_152599 = 0;
BeforeRet: do {
var h_152600 = (hc_152598 & (t_152594.data != null ? (t_152594.data.length-1) : -1));
L1: do {
L2: while (true) {
if (!isFilled_81465(t_152594.data[h_152600].Field0)) break L2;
if (((t_152594.data[h_152600].Field0 == hc_152598) && eqStrings(t_152594.data[h_152600].Field2, key_152596))) {
result_152599 = h_152600;
break BeforeRet;
}

h_152600 = nextTry_81601(h_152600, (t_152594.data != null ? (t_152594.data.length-1) : -1));
}
} while(false);
result_152599 = (-1 - h_152600);
} while (false); 
return result_152599;
}
function rawInsert_152605(t_152612, data_152616, data_152616_Idx, key_152618, val_152620, hc_152622, h_152624) {

data_152616[data_152616_Idx][h_152624].Field2 = nimCopy(null, key_152618, NTI138);
data_152616[data_152616_Idx][h_152624].Field3 = val_152620;
data_152616[data_152616_Idx][h_152624].Field0 = hc_152622;
data_152616[data_152616_Idx][h_152624].Field1 = -1;
if ((t_152612.first < 0)) {
t_152612.first = h_152624;
}

if ((0 <= t_152612.last)) {
data_152616[data_152616_Idx][t_152612.last].Field1 = h_152624;
}

t_152612.last = h_152624;
}
function enlarge_152545(t_152552) {

var n_152556 = null;
n_152556 = new Array(((t_152552.data != null ? t_152552.data.length : 0) * 2)); for (var i=0;i<((t_152552.data != null ? t_152552.data.length : 0) * 2);++i) {n_152556[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}var h_152575 = t_152552.first;
t_152552.first = -1;
t_152552.last = -1;
var Tmp1 = t_152552.data; t_152552.data = n_152556; n_152556 = Tmp1;L2: do {
L3: while (true) {
if (!(0 <= h_152575)) break L3;
var nxt_152586 = n_152556[h_152575].Field1;
if (isFilled_81465(n_152556[h_152575].Field0)) {
var j_152603 = (-1 - rawGetKnownHC_152588(t_152552, n_152556[h_152575].Field2, n_152556[h_152575].Field0));
rawInsert_152605(t_152552, t_152552, "data", n_152556[h_152575].Field2, n_152556[h_152575].Field3, n_152556[h_152575].Field0, j_152603);
}

h_152575 = nxt_152586;
}
} while(false);
}
function X5BX5Deq__152502(t_152509, key_152511, val_152513) {

var hc_152514 = [0];
var index_152535 = rawGet_152516(t_152509, key_152511, hc_152514, 0);
if ((0 <= index_152535)) {
t_152509.data[index_152535].Field3 = val_152513;
}
else {
if (mustRehash_81470((t_152509.data != null ? t_152509.data.length : 0), t_152509.counter)) {
enlarge_152545(t_152509);
index_152535 = rawGetKnownHC_152588(t_152509, key_152511, hc_152514[0]);
}

index_152535 = (-1 - index_152535);
rawInsert_152605(t_152509, t_152509, "data", key_152511, val_152513, hc_152514[0], index_152535);
t_152509.counter += 1;
}

}
function X5BX5Deq__155816(obj_155818, key_155819, val_155820) {

X5BX5Deq__152502(obj_155818.fields, key_155819, val_155820);
}
function percent__152419(n_152421) {

var result_152422 = null;
result_152422 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_152422.kind = 2;
result_152422.num = n_152421;
return result_152422;
}
function percent__152406(s_152408) {

var result_152409 = null;
BeforeRet: do {
result_152409 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
if ((s_152408 === null)) {
break BeforeRet;
}

result_152409.kind = 4;
result_152409.str = nimCopy(null, s_152408, NTI138);
} while (false); 
return result_152409;
}
function percent__152445(b_152447) {

var result_152448 = null;
result_152448 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_152448.kind = 1;
result_152448.bval = b_152447;
return result_152448;
}
function newJArray_152211() {

var result_152213 = null;
result_152213 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_152213.kind = 6;
result_152213.elems = nimCopy(null, [], NTI152238);
return result_152213;
}
function percent__152458(keyVals_152464) {

var result_152465 = null;
BeforeRet: do {
if (((keyVals_152464 != null ? keyVals_152464.length : 0) == 0)) {
result_152465 = newJArray_152211();
break BeforeRet;
}

result_152465 = newJObject_152021();
L1: do {
var key_152498 = null;
var val_152499 = null;
var i_152677 = 0;
L2: do {
L3: while (true) {
if (!(i_152677 < (keyVals_152464 != null ? keyVals_152464.length : 0))) break L3;
key_152498 = keyVals_152464[i_152677]["Field0"];
val_152499 = keyVals_152464[i_152677]["Field1"];
X5BX5Deq__152502(result_152465.fields, key_152498, val_152499);
i_152677 += 1;
}
} while(false);
} while(false);
} while (false); 
return result_152465;
}
function percent__160096(player_160098) {

var result_160099 = null;
result_160099 = percent__152458([{Field0: makeNimstrLit("nickname"), Field1: percent__152406(player_160098.nickname)}, {Field0: makeNimstrLit("score"), Field1: percent__152419(player_160098.score)}, {Field0: makeNimstrLit("alive"), Field1: percent__152445(player_160098.alive)}, {Field0: makeNimstrLit("paused"), Field1: percent__152445(player_160098.paused)}]);
return result_160099;
}
function add_155424(father_155426, child_155427) {

if (father_155426.elems != null) { father_155426.elems.push(child_155427); } else { father_155426.elems = [child_155427]; };
}
function percent__160215(elements_160220) {

var result_160221 = null;
result_160221 = newJArray_152211();
L1: do {
var elem_160229 = null;
var i_160234 = 0;
L2: do {
L3: while (true) {
if (!(i_160234 < (elements_160220 != null ? elements_160220.length : 0))) break L3;
elem_160229 = elements_160220[i_160234];
add_155424(result_160221, elem_160229);
i_160234 += 1;
}
} while(false);
} while(false);
return result_160221;
}
function len_153461(t_153467) {

var result_153468 = 0;
result_153468 = t_153467.counter;
return result_153468;
}
function len_153711(n_153713) {

var result_153714 = 0;
switch (n_153713.kind) {
case 6: result_153714 = (n_153713.elems != null ? n_153713.elems.length : 0);

break;
case 5: result_153714 = len_153461(n_153713.fields);

break;
default: 
break;
}
return result_153714;
}
function escapeJson_156418(s_156420, result_156422, result_156422_Idx) {

var Tmp4;
if (result_156422[result_156422_Idx] != null) { result_156422[result_156422_Idx] = (result_156422[result_156422_Idx].slice(0, -1)).concat(makeNimstrLit("\"")); } else { result_156422[result_156422_Idx] = makeNimstrLit("\"");};
L1: do {
var x_156424 = 0;
var i_156461 = 0;
var result_156463 = 0;
L2: do {
L3: while (true) {
if (!(i_156461 < (s_156420 != null ? s_156420.length-1 : 0))) break L3;
if ((s_156420[i_156461] <= 127)) {
result_156463 = s_156420[i_156461];
i_156461 += 1;
}
else {
if ((((s_156420[i_156461] >>> 0) >>> 5) == 6)) {
if ((i_156461 <= ((s_156420 != null ? s_156420.length-1 : 0) - 2))) {
result_156463 = (((s_156420[i_156461] & 31) << 6) | (s_156420[(i_156461 + 1)] & 63));
i_156461 += 2;
}
else {
result_156463 = 65533;
i_156461 += 1;
}

}
else {
if ((((s_156420[i_156461] >>> 0) >>> 4) == 14)) {
if ((i_156461 <= ((s_156420 != null ? s_156420.length-1 : 0) - 3))) {
result_156463 = ((((s_156420[i_156461] & 15) << 12) | ((s_156420[(i_156461 + 1)] & 63) << 6)) | (s_156420[(i_156461 + 2)] & 63));
i_156461 += 3;
}
else {
result_156463 = 65533;
i_156461 += 1;
}

}
else {
if ((((s_156420[i_156461] >>> 0) >>> 3) == 30)) {
if ((i_156461 <= ((s_156420 != null ? s_156420.length-1 : 0) - 4))) {
result_156463 = (((((s_156420[i_156461] & 7) << 18) | ((s_156420[(i_156461 + 1)] & 63) << 12)) | ((s_156420[(i_156461 + 2)] & 63) << 6)) | (s_156420[(i_156461 + 3)] & 63));
i_156461 += 4;
}
else {
result_156463 = 65533;
i_156461 += 1;
}

}
else {
if ((((s_156420[i_156461] >>> 0) >>> 2) == 62)) {
if ((i_156461 <= ((s_156420 != null ? s_156420.length-1 : 0) - 5))) {
result_156463 = ((((((s_156420[i_156461] & 3) << 24) | ((s_156420[(i_156461 + 1)] & 63) << 18)) | ((s_156420[(i_156461 + 2)] & 63) << 12)) | ((s_156420[(i_156461 + 3)] & 63) << 6)) | (s_156420[(i_156461 + 4)] & 63));
i_156461 += 5;
}
else {
result_156463 = 65533;
i_156461 += 1;
}

}
else {
if ((((s_156420[i_156461] >>> 0) >>> 1) == 126)) {
if ((i_156461 <= ((s_156420 != null ? s_156420.length-1 : 0) - 6))) {
result_156463 = (((((((s_156420[i_156461] & 1) << 30) | ((s_156420[(i_156461 + 1)] & 63) << 24)) | ((s_156420[(i_156461 + 2)] & 63) << 18)) | ((s_156420[(i_156461 + 3)] & 63) << 12)) | ((s_156420[(i_156461 + 4)] & 63) << 6)) | (s_156420[(i_156461 + 5)] & 63));
i_156461 += 6;
}
else {
result_156463 = 65533;
i_156461 += 1;
}

}
else {
result_156463 = s_156420[i_156461];
i_156461 += 1;
}
}}}}}
x_156424 = result_156463;
var r_156425 = (x_156424|0);
if (!(32 <= r_156425)) Tmp4 = false; else {Tmp4 = (r_156425 <= 127); }if (Tmp4) {
var c_156427 = r_156425;
switch (c_156427) {
case 34: if (result_156422[result_156422_Idx] != null) { result_156422[result_156422_Idx] = (result_156422[result_156422_Idx].slice(0, -1)).concat(makeNimstrLit("\\\"")); } else { result_156422[result_156422_Idx] = makeNimstrLit("\\\"");};

break;
case 92: if (result_156422[result_156422_Idx] != null) { result_156422[result_156422_Idx] = (result_156422[result_156422_Idx].slice(0, -1)).concat(makeNimstrLit("\\\\")); } else { result_156422[result_156422_Idx] = makeNimstrLit("\\\\");};

break;
default: 
if (result_156422[result_156422_Idx] != null) { addChar(result_156422[result_156422_Idx], c_156427); } else { result_156422[result_156422_Idx] = [c_156427, 0]; };
break;
}
}
else {
if (result_156422[result_156422_Idx] != null) { result_156422[result_156422_Idx] = (result_156422[result_156422_Idx].slice(0, -1)).concat(makeNimstrLit("\\u0000")); } else { result_156422[result_156422_Idx] = makeNimstrLit("\\u0000");};
var start_156428 = ((result_156422[result_156422_Idx] != null ? result_156422[result_156422_Idx].length-1 : 0) - 4);
L5: do {
var j_156439 = 0;
var res_156455 = 3;
L6: do {
L7: while (true) {
if (!(0 <= res_156455)) break L7;
j_156439 = res_156455;
result_156422[result_156422_Idx][(j_156439 + start_156428)] = makeNimstrLit("0123456789ABCDEF")[(r_156425 & 15)];
r_156425 = ((r_156425 >>> 0) >>> 4);
res_156455 -= 1;
}
} while(false);
} while(false);
}

}
} while(false);
} while(false);
if (result_156422[result_156422_Idx] != null) { result_156422[result_156422_Idx] = (result_156422[result_156422_Idx].slice(0, -1)).concat(makeNimstrLit("\"")); } else { result_156422[result_156422_Idx] = makeNimstrLit("\"");};
}
function toUgly_156853(result_156856, result_156856_Idx, node_156857) {

var Tmp7;
var comma_156858 = false;
switch (node_156857.kind) {
case 6: if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(makeNimstrLit("[")); } else { result_156856[result_156856_Idx] = makeNimstrLit("[");};
L1: do {
var child_156868 = null;
var colontmp__157204 = null;
colontmp__157204 = node_156857.elems;
var i_157207 = 0;
var L_157209 = (colontmp__157204 != null ? colontmp__157204.length : 0);
L2: do {
L3: while (true) {
if (!(i_157207 < L_157209)) break L3;
child_156868 = colontmp__157204[i_157207];
if (comma_156858) {
if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(makeNimstrLit(",")); } else { result_156856[result_156856_Idx] = makeNimstrLit(",");};
}
else {
comma_156858 = true;
}

toUgly_156853(result_156856, result_156856_Idx, child_156868);
i_157207 += 1;
}
} while(false);
} while(false);
if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(makeNimstrLit("]")); } else { result_156856[result_156856_Idx] = makeNimstrLit("]");};

break;
case 5: if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(makeNimstrLit("{")); } else { result_156856[result_156856_Idx] = makeNimstrLit("{");};
L4: do {
var key_156879 = null;
var value_156880 = null;
var colontmp__157211 = {data: null, counter: 0, first: 0, last: 0};
colontmp__157211 = node_156857.fields;
var h_157214 = colontmp__157211.first;
L5: do {
L6: while (true) {
if (!(0 <= h_157214)) break L6;
var nxt_157216 = colontmp__157211.data[h_157214].Field1;
if (isFilled_81465(colontmp__157211.data[h_157214].Field0)) {
key_156879 = colontmp__157211.data[h_157214].Field2;
value_156880 = colontmp__157211.data[h_157214].Field3;
if (comma_156858) {
if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(makeNimstrLit(",")); } else { result_156856[result_156856_Idx] = makeNimstrLit(",");};
}
else {
comma_156858 = true;
}

escapeJson_156418(key_156879, result_156856, result_156856_Idx);
if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(makeNimstrLit(":")); } else { result_156856[result_156856_Idx] = makeNimstrLit(":");};
toUgly_156853(result_156856, result_156856_Idx, value_156880);
}

h_157214 = nxt_157216;
}
} while(false);
} while(false);
if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(makeNimstrLit("}")); } else { result_156856[result_156856_Idx] = makeNimstrLit("}");};

break;
case 4: escapeJson_156418(node_156857.str, result_156856, result_156856_Idx);

break;
case 2: if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(cstrToNimstr((node_156857.num)+"")); } else { result_156856[result_156856_Idx] = cstrToNimstr((node_156857.num)+"");};

break;
case 3: if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(cstrToNimstr((node_156857.fnum)+"")); } else { result_156856[result_156856_Idx] = cstrToNimstr((node_156857.fnum)+"");};

break;
case 1: if (node_156857.bval) {
Tmp7 = makeNimstrLit("true");
}
else {
Tmp7 = makeNimstrLit("false");
}

if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(Tmp7); } else { result_156856[result_156856_Idx] = Tmp7;};

break;
case 0: if (result_156856[result_156856_Idx] != null) { result_156856[result_156856_Idx] = (result_156856[result_156856_Idx].slice(0, -1)).concat(makeNimstrLit("null")); } else { result_156856[result_156856_Idx] = makeNimstrLit("null");};

break;
}
}
function dollar__157217(node_157219) {

var result_157220 = [null];
result_157220[0] = nimCopy(null, mnewString(0), NTI138);
toUgly_156853(result_157220, 0, node_157219);
return result_157220[0];
}
function toJson_160108(message_160110) {

var result_160111 = null;
var json_160112 = newJObject_152021();
X5BX5Deq__155816(json_160112, makeNimstrLit("kind"), percent__152419((message_160110.kind|0)));
switch (message_160110.kind) {
case 0: X5BX5Deq__155816(json_160112, makeNimstrLit("nickname"), percent__152406(message_160110.nickname));

break;
case 1: X5BX5Deq__155816(json_160112, makeNimstrLit("score"), percent__152419(message_160110.score));
X5BX5Deq__155816(json_160112, makeNimstrLit("alive"), percent__152445(message_160110.alive));
X5BX5Deq__155816(json_160112, makeNimstrLit("paused"), percent__152445(message_160110.paused));

break;
case 2: var players_160138 = nimCopy(null, [], NTI160137);
L1: do {
var player_160202 = {nickname: null, score: 0, alive: false, paused: false};
var colontmp__160240 = null;
colontmp__160240 = message_160110.players;
var i_160243 = 0;
var L_160245 = (colontmp__160240 != null ? colontmp__160240.length : 0);
L2: do {
L3: while (true) {
if (!(i_160243 < L_160245)) break L3;
player_160202 = colontmp__160240[i_160243];
if (players_160138 != null) { players_160138.push(percent__160096(player_160202)); } else { players_160138 = [percent__160096(player_160202)]; };
i_160243 += 1;
}
} while(false);
} while(false);
X5BX5Deq__155816(json_160112, makeNimstrLit("players"), percent__160215(players_160138));
X5BX5Deq__155816(json_160112, makeNimstrLit("count"), percent__152419(message_160110.count));
X5BX5Deq__155816(json_160112, makeNimstrLit("top"), percent__160096(message_160110.top));

break;
}
result_160111 = nimCopy(null, dollar__157217(json_160112), NTI138);
return result_160111;
}
function mod_158311(x_158315, y_158317) {

var Tmp1;
var result_158318 = 0.0;
if ((y_158317 == 0.0)) {
Tmp1 = x_158315;
}
else {
Tmp1 = (x_158315 - (y_158317 * Math.floor((x_158315 / y_158317))));
}

result_158318 = Tmp1;
return result_158318;
}
function getVarType_158303(x_158305) {

var result_158306 = 0;
BeforeRet: do {
result_158306 = 0;
switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_158305)))) {
case "[object Array]": result_158306 = 6;
break BeforeRet;

break;
case "[object Object]": result_158306 = 5;
break BeforeRet;

break;
case "[object Number]": if ((mod_158311(x_158305, 1.0000000000000000e+00) == 0.0)) {
result_158306 = 2;
break BeforeRet;
}
else {
result_158306 = 3;
break BeforeRet;
}


break;
case "[object Boolean]": result_158306 = 1;
break BeforeRet;

break;
case "[object Null]": result_158306 = 0;
break BeforeRet;

break;
case "[object String]": result_158306 = 4;
break BeforeRet;

break;
default: 
break;
}
} while (false); 
return result_158306;
}
function len_158403(x_158405) {

var result_158406 = 0;
      result_158406 = x_158405.length;
    return result_158406;
}
function X5BX5D__158801(x_158803, y_158804) {

var result_158805 = {};
      result_158805 = x_158803[y_158804];
    return result_158805;
}
function newJInt_151971(n_151973) {

var result_151974 = null;
result_151974 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_151974.kind = 2;
result_151974.num = n_151973;
return result_151974;
}
function newJFloat_151984(n_151986) {

var result_151987 = null;
result_151987 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_151987.kind = 3;
result_151987.fnum = n_151986;
return result_151987;
}
function newJString_151945(s_151947) {

var result_151948 = null;
result_151948 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_151948.kind = 4;
result_151948.str = nimCopy(null, s_151947, NTI138);
return result_151948;
}
function newJBool_151997(b_151999) {

var result_152000 = null;
result_152000 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_152000.kind = 1;
result_152000.bval = b_151999;
return result_152000;
}
function newJNull_152010() {

var result_152012 = null;
result_152012 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
return result_152012;
}
function convertObject_159001(x_159003) {

var result_159004 = null;
switch (getVarType_158303(x_159003)) {
case 6: result_159004 = newJArray_152211();
L1: do {
var i_159022 = 0;
var colontmp__159027 = 0;
colontmp__159027 = len_158403(x_159003) - 1;
var res_159030 = 0;
L2: do {
L3: while (true) {
if (!(res_159030 <= colontmp__159027)) break L3;
i_159022 = res_159030;
add_155424(result_159004, convertObject_159001(X5BX5D__158801(x_159003, i_159022)));
res_159030 += 1;
}
} while(false);
} while(false);

break;
case 5: result_159004 = newJObject_152021();
for (property in x_159003) {
        if (x_159003.hasOwnProperty(property)) {
      var nimProperty_159024 = null;
var nimValue_159025 = {};
nimProperty_159024 = property; nimValue_159025 = x_159003[property];X5BX5Deq__155816(result_159004, cstrToNimstr(nimProperty_159024), convertObject_159001(nimValue_159025));
}}
break;
case 2: result_159004 = newJInt_151971(x_159003);

break;
case 3: result_159004 = newJFloat_151984(x_159003);

break;
case 4: result_159004 = newJString_151945(cstrToNimstr(x_159003));

break;
case 1: result_159004 = newJBool_151997(x_159003);

break;
case 0: result_159004 = newJNull_152010();

break;
}
return result_159004;
}
function parseJson_159040(buffer_159042) {

var result_159043 = null;
BeforeRet: do {
result_159043 = convertObject_159001(JSON.parse(toJSStr(buffer_159042)));
break BeforeRet;
} while (false); 
return result_159043;
}
function getNum_152263(n_152265, default_152266) {

var Tmp1;
var result_152267 = 0;
BeforeRet: do {
if ((n_152265 === null)) Tmp1 = true; else {Tmp1 = !((n_152265.kind == 2)); }if (Tmp1) {
result_152267 = default_152266;
break BeforeRet;
}
else {
result_152267 = n_152265.num;
break BeforeRet;
}

} while (false); 
return result_152267;
}
function rawGet_153540(t_153545, key_153547, hc_153549, hc_153549_Idx) {

var Tmp3;
var result_153550 = 0;
BeforeRet: do {
hc_153549[hc_153549_Idx] = hash_66837(key_153547);
if ((hc_153549[hc_153549_Idx] == 0)) {
hc_153549[hc_153549_Idx] = 314159265;
}

var h_153554 = (hc_153549[hc_153549_Idx] & (t_153545.data != null ? (t_153545.data.length-1) : -1));
L1: do {
L2: while (true) {
if (!isFilled_81465(t_153545.data[h_153554].Field0)) break L2;
if (!(t_153545.data[h_153554].Field0 == hc_153549[hc_153549_Idx])) Tmp3 = false; else {Tmp3 = eqStrings(t_153545.data[h_153554].Field2, key_153547); }if (Tmp3) {
result_153550 = h_153554;
break BeforeRet;
}

h_153554 = nextTry_81601(h_153554, (t_153545.data != null ? (t_153545.data.length-1) : -1));
}
} while(false);
result_153550 = (-1 - h_153554);
} while (false); 
return result_153550;
}
function X5BX5D__153525(t_153532, key_153534) {

var result_153536 = [null, 0];
var result_153536_Idx = 0;
var hc_153538 = [0];
var index_153559 = rawGet_153540(t_153532, key_153534, hc_153538, 0);
if ((0 <= index_153559)) {
result_153536 = t_153532.data[index_153559]; result_153536_Idx = "Field3";
}
else {
var e_153606 = null;
e_153606 = {m_type: NTI3450, parent: null, name: null, message: null, trace: null};
e_153606.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(key_153534), NTI138);
e_153606.parent = null;
raiseException(e_153606, "KeyError");
}

return [result_153536, result_153536_Idx];
}
function X5BX5D__153734(node_153736, name_153737) {

var Tmp1;
var result_153738 = null;
result_153738 = (Tmp1 = X5BX5D__153525(node_153736.fields, name_153737), Tmp1[0])[Tmp1[1]];
return result_153738;
}
function getStr_152239(n_152241, default_152242) {

var Tmp1;
var result_152243 = null;
BeforeRet: do {
if ((n_152241 === null)) Tmp1 = true; else {Tmp1 = !((n_152241.kind == 4)); }if (Tmp1) {
result_152243 = nimCopy(null, default_152242, NTI138);
break BeforeRet;
}
else {
result_152243 = nimCopy(null, n_152241.str, NTI138);
break BeforeRet;
}

} while (false); 
return result_152243;
}
function getBVal_152304(n_152306, default_152307) {

var Tmp1;
var result_152308 = false;
BeforeRet: do {
if ((n_152306 === null)) Tmp1 = true; else {Tmp1 = !((n_152306.kind == 1)); }if (Tmp1) {
result_152308 = default_152307;
break BeforeRet;
}
else {
result_152308 = n_152306.bval;
break BeforeRet;
}

} while (false); 
return result_152308;
}
function parsePlayer_160026(player_160028) {

var result_160029 = {nickname: null, score: 0, alive: false, paused: false};
nimCopy(result_160029, {nickname: getStr_152239(X5BX5D__153734(player_160028, makeNimstrLit("nickname")), makeNimstrLit("")), score: getNum_152263(X5BX5D__153734(player_160028, makeNimstrLit("score")), 0), alive: getBVal_152304(X5BX5D__153734(player_160028, makeNimstrLit("alive")), false), paused: getBVal_152304(X5BX5D__153734(player_160028, makeNimstrLit("paused")), false)}, NTI160004);
return result_160029;
}
function parseMessage_160035(data_160037) {

var result_160038 = {kind: 0, nickname: null, score: 0, alive: false, paused: false, players: null, count: 0, top: {nickname: null, score: 0, alive: false, paused: false}};
var json_160039 = parseJson_159040(data_160037);
result_160038.kind = getNum_152263(X5BX5D__153734(json_160039, makeNimstrLit("kind")), 0);
switch (result_160038.kind) {
case 0: result_160038.nickname = nimCopy(null, getStr_152239(X5BX5D__153734(json_160039, makeNimstrLit("nickname")), makeNimstrLit("")), NTI138);

break;
case 1: result_160038.score = getNum_152263(X5BX5D__153734(json_160039, makeNimstrLit("score")), 0);
result_160038.alive = getBVal_152304(X5BX5D__153734(json_160039, makeNimstrLit("alive")), false);
result_160038.paused = getBVal_152304(X5BX5D__153734(json_160039, makeNimstrLit("paused")), false);

break;
case 2: result_160038.players = nimCopy(null, [], NTI160068);
L1: do {
var player_160069 = null;
var colontmp__160085 = null;
colontmp__160085 = X5BX5D__153734(json_160039, makeNimstrLit("players"));
L2: do {
var i_160089 = null;
var colontmp__160091 = null;
colontmp__160091 = colontmp__160085.elems;
var i_160093 = 0;
var L_160095 = (colontmp__160091 != null ? colontmp__160091.length : 0);
L3: do {
L4: while (true) {
if (!(i_160093 < L_160095)) break L4;
i_160089 = colontmp__160091[i_160093];
player_160069 = i_160089;
if (result_160038.players != null) { result_160038.players.push(parsePlayer_160026(player_160069)); } else { result_160038.players = [parsePlayer_160026(player_160069)]; };
i_160093 += 1;
}
} while(false);
} while(false);
} while(false);
result_160038.count = getNum_152263(X5BX5D__153734(json_160039, makeNimstrLit("count")), 0);
nimCopy(result_160038.top, parsePlayer_160026(X5BX5D__153734(json_160039, makeNimstrLit("top"))), NTI160004);

break;
}
return result_160038;
}
function addEscaped_74021(result_74024, result_74024_Idx, s_74025) {

L1: do {
var c_74027 = 0;
var i_74031 = 0;
var L_74033 = (s_74025 != null ? s_74025.length-1 : 0);
L2: do {
L3: while (true) {
if (!(i_74031 < L_74033)) break L3;
c_74027 = s_74025[i_74031];
switch (c_74027) {
case 60: if (result_74024[result_74024_Idx] != null) { result_74024[result_74024_Idx] = (result_74024[result_74024_Idx].slice(0, -1)).concat(makeNimstrLit("&lt;")); } else { result_74024[result_74024_Idx] = makeNimstrLit("&lt;");};

break;
case 62: if (result_74024[result_74024_Idx] != null) { result_74024[result_74024_Idx] = (result_74024[result_74024_Idx].slice(0, -1)).concat(makeNimstrLit("&gt;")); } else { result_74024[result_74024_Idx] = makeNimstrLit("&gt;");};

break;
case 38: if (result_74024[result_74024_Idx] != null) { result_74024[result_74024_Idx] = (result_74024[result_74024_Idx].slice(0, -1)).concat(makeNimstrLit("&amp;")); } else { result_74024[result_74024_Idx] = makeNimstrLit("&amp;");};

break;
case 34: if (result_74024[result_74024_Idx] != null) { result_74024[result_74024_Idx] = (result_74024[result_74024_Idx].slice(0, -1)).concat(makeNimstrLit("&quot;")); } else { result_74024[result_74024_Idx] = makeNimstrLit("&quot;");};

break;
case 39: if (result_74024[result_74024_Idx] != null) { result_74024[result_74024_Idx] = (result_74024[result_74024_Idx].slice(0, -1)).concat(makeNimstrLit("&#x27;")); } else { result_74024[result_74024_Idx] = makeNimstrLit("&#x27;");};

break;
case 47: if (result_74024[result_74024_Idx] != null) { result_74024[result_74024_Idx] = (result_74024[result_74024_Idx].slice(0, -1)).concat(makeNimstrLit("&#x2F;")); } else { result_74024[result_74024_Idx] = makeNimstrLit("&#x2F;");};

break;
default: 
if (result_74024[result_74024_Idx] != null) { addChar(result_74024[result_74024_Idx], c_74027); } else { result_74024[result_74024_Idx] = [c_74027, 0]; };
break;
}
i_74031 += 1;
}
} while(false);
} while(false);
}
function escape_74034(s_74036) {

var result_74037 = [null];
result_74037[0] = nimCopy(null, mnewString(0), NTI138);
addEscaped_74021(result_74037, 0, s_74036);
return result_74037[0];
}
function nsuToLowerAsciiChar(c_48792) {

var result_48793 = 0;
if ((SetConstr([65, 90])[c_48792] != undefined)) {
result_48793 = (c_48792 + 32);
}
else {
result_48793 = c_48792;
}

return result_48793;
}
function nsuToLowerAsciiStr(s_48834) {

var result_48835 = null;
result_48835 = nimCopy(null, mnewString((s_48834 != null ? s_48834.length-1 : 0)), NTI138);
L1: do {
var i_48845 = 0;
var colontmp__48847 = 0;
colontmp__48847 = ((s_48834 != null ? s_48834.length-1 : 0) - 1);
var res_48850 = 0;
L2: do {
L3: while (true) {
if (!(res_48850 <= colontmp__48847)) break L3;
i_48845 = res_48850;
result_48835[i_48845] = nsuToLowerAsciiChar(s_48834[i_48845]);
res_48850 += 1;
}
} while(false);
} while(false);
return result_48835;
}
function invalidFormatString_54748() {

var e_54756 = null;
e_54756 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
e_54756.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI138);
e_54756.parent = null;
raiseException(e_54756, "ValueError");
}
function nsuCmpIgnoreStyle(a_49092, b_49093) {

var Tmp7;
var result_49094 = 0;
var i_49095 = 0;
var j_49096 = 0;
L1: do {
L2: while (true) {
if (!true) break L2;
L3: do {
L4: while (true) {
if (!(a_49092[i_49095] == 95)) break L4;
i_49095 += 1;
}
} while(false);
L5: do {
L6: while (true) {
if (!(b_49093[j_49096] == 95)) break L6;
j_49096 += 1;
}
} while(false);
var aa_49115 = nsuToLowerAsciiChar(a_49092[i_49095]);
var bb_49116 = nsuToLowerAsciiChar(b_49093[j_49096]);
result_49094 = (aa_49115 - bb_49116);
if (!((result_49094 == 0))) Tmp7 = true; else {Tmp7 = (aa_49115 == 0); }if (Tmp7) {
break L1;
}

i_49095 += 1;
j_49096 += 1;
}
} while(false);
return result_49094;
}
function findNormalized_54731(x_54733, inArray_54735) {

var result_54736 = 0;
BeforeRet: do {
var i_54737 = 0;
L1: do {
L2: while (true) {
if (!(i_54737 < (inArray_54735 != null ? (inArray_54735.length-1) : -1))) break L2;
if ((nsuCmpIgnoreStyle(x_54733, inArray_54735[i_54737]) == 0)) {
result_54736 = i_54737;
break BeforeRet;
}

i_54737 += 2;
}
} while(false);
result_54736 = -1;
break BeforeRet;
} while (false); 
return result_54736;
}
function nsuAddf(s_54769, s_54769_Idx, formatstr_54770, a_54772) {

var Tmp5;
var Tmp8;
var Tmp11;
var i_54775 = 0;
var num_54776 = 0;
L1: do {
L2: while (true) {
if (!(i_54775 < (formatstr_54770 != null ? formatstr_54770.length-1 : 0))) break L2;
if ((formatstr_54770[i_54775] == 36)) {
switch (formatstr_54770[(i_54775 + 1)]) {
case 35: if (((a_54772 != null ? (a_54772.length-1) : -1) < num_54776)) {
invalidFormatString_54748();
}

if (s_54769[s_54769_Idx] != null) { s_54769[s_54769_Idx] = (s_54769[s_54769_Idx].slice(0, -1)).concat(a_54772[num_54776]); } else { s_54769[s_54769_Idx] = a_54772[num_54776];};
i_54775 += 2;
num_54776 += 1;

break;
case 36: if (s_54769[s_54769_Idx] != null) { addChar(s_54769[s_54769_Idx], 36); } else { s_54769[s_54769_Idx] = [36, 0]; };
i_54775 += 2;

break;
case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 45: var j_54813 = 0;
i_54775 += 1;
var negative_54823 = (formatstr_54770[i_54775] == 45);
if (negative_54823) {
i_54775 += 1;
}

L3: do {
L4: while (true) {
if (!(SetConstr([48, 57])[formatstr_54770[i_54775]] != undefined)) break L4;
j_54813 = (((j_54813 * 10) + formatstr_54770[i_54775]) - 48);
i_54775 += 1;
}
} while(false);
if (!(negative_54823)) {
Tmp5 = (j_54813 - 1);
}
else {
Tmp5 = ((a_54772 != null ? a_54772.length : 0) - j_54813);
}

var idx_54875 = Tmp5;
if (((a_54772 != null ? (a_54772.length-1) : -1) < idx_54875)) {
invalidFormatString_54748();
}

if (s_54769[s_54769_Idx] != null) { s_54769[s_54769_Idx] = (s_54769[s_54769_Idx].slice(0, -1)).concat(a_54772[idx_54875]); } else { s_54769[s_54769_Idx] = a_54772[idx_54875];};

break;
case 123: var j_54885 = (i_54775 + 1);
L6: do {
L7: while (true) {
if (!!((SetConstr(0, 125)[formatstr_54770[j_54885]] != undefined))) break L7;
j_54885 += 1;
}
} while(false);
var x_54906 = findNormalized_54731((formatstr_54770.slice((i_54775 + 2), ((j_54885 - 1))+1).concat(0)), a_54772);
if (!(0 <= x_54906)) Tmp8 = false; else {Tmp8 = (x_54906 < (a_54772 != null ? (a_54772.length-1) : -1)); }if (Tmp8) {
if (s_54769[s_54769_Idx] != null) { s_54769[s_54769_Idx] = (s_54769[s_54769_Idx].slice(0, -1)).concat(a_54772[(x_54906 + 1)]); } else { s_54769[s_54769_Idx] = a_54772[(x_54906 + 1)];};
}
else {
invalidFormatString_54748();
}

i_54775 = (j_54885 + 1);

break;
case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 128: case 129: case 130: case 131: case 132: case 133: case 134: case 135: case 136: case 137: case 138: case 139: case 140: case 141: case 142: case 143: case 144: case 145: case 146: case 147: case 148: case 149: case 150: case 151: case 152: case 153: case 154: case 155: case 156: case 157: case 158: case 159: case 160: case 161: case 162: case 163: case 164: case 165: case 166: case 167: case 168: case 169: case 170: case 171: case 172: case 173: case 174: case 175: case 176: case 177: case 178: case 179: case 180: case 181: case 182: case 183: case 184: case 185: case 186: case 187: case 188: case 189: case 190: case 191: case 192: case 193: case 194: case 195: case 196: case 197: case 198: case 199: case 200: case 201: case 202: case 203: case 204: case 205: case 206: case 207: case 208: case 209: case 210: case 211: case 212: case 213: case 214: case 215: case 216: case 217: case 218: case 219: case 220: case 221: case 222: case 223: case 224: case 225: case 226: case 227: case 228: case 229: case 230: case 231: case 232: case 233: case 234: case 235: case 236: case 237: case 238: case 239: case 240: case 241: case 242: case 243: case 244: case 245: case 246: case 247: case 248: case 249: case 250: case 251: case 252: case 253: case 254: case 255: case 95: var j_54907 = (i_54775 + 1);
L9: do {
L10: while (true) {
if (!(SetConstr([97, 122], [65, 90], [48, 57], [128, 255], 95)[formatstr_54770[j_54907]] != undefined)) break L10;
j_54907 += 1;
}
} while(false);
var x_54927 = findNormalized_54731((formatstr_54770.slice((i_54775 + 1), ((j_54907 - 1))+1).concat(0)), a_54772);
if (!(0 <= x_54927)) Tmp11 = false; else {Tmp11 = (x_54927 < (a_54772 != null ? (a_54772.length-1) : -1)); }if (Tmp11) {
if (s_54769[s_54769_Idx] != null) { s_54769[s_54769_Idx] = (s_54769[s_54769_Idx].slice(0, -1)).concat(a_54772[(x_54927 + 1)]); } else { s_54769[s_54769_Idx] = a_54772[(x_54927 + 1)];};
}
else {
invalidFormatString_54748();
}

i_54775 = j_54907;

break;
default: 
invalidFormatString_54748();
break;
}
}
else {
if (s_54769[s_54769_Idx] != null) { addChar(s_54769[s_54769_Idx], formatstr_54770[i_54775]); } else { s_54769[s_54769_Idx] = [formatstr_54770[i_54775], 0]; };
i_54775 += 1;
}

}
} while(false);
}
function nsuFormatSingleElem(formatstr_54966, a_54967) {

var result_54968 = [null];
result_54968[0] = nimCopy(null, mnewString(0), NTI138);
nsuAddf(result_54968, 0, formatstr_54966, [a_54967]);
return result_54968[0];
}
function nsuIntToStr(x_50645, minchars_50646) {

var result_50647 = null;
result_50647 = nimCopy(null, cstrToNimstr((Math.abs(x_50645))+""), NTI138);
L1: do {
var i_50657 = 0;
var colontmp__50659 = 0;
colontmp__50659 = (minchars_50646 - (result_50647 != null ? result_50647.length-1 : 0));
var res_50662 = 1;
L2: do {
L3: while (true) {
if (!(res_50662 <= colontmp__50659)) break L3;
i_50657 = res_50662;
result_50647 = nimCopy(null, [48].concat(result_50647), NTI138);
res_50662 += 1;
}
} while(false);
} while(false);
if ((x_50645 < 0)) {
result_50647 = nimCopy(null, [45].concat(result_50647), NTI138);
}

return result_50647;
}
function createHighScoreText_162842(player_162844) {

var Tmp1;
var result_162845 = null;
BeforeRet: do {
var nickname_162846 = escape_74034(nsuToLowerAsciiStr(player_162844.nickname));
if (player_162844.alive) {
Tmp1 = makeNimstrLit("");
}
else {
Tmp1 = nsuFormatSingleElem(makeNimstrLit("background-image: linear-gradient(transparent 5px,$1 5px,$1 7px,transparent 5px);background-image: -webkit-linear-gradient(transparent 5px,$1 5px,$1 7px,transparent 5px);"), makeNimstrLit("#cc1f1f"));
}

var deathStyle_162847 = nimCopy(null, Tmp1, NTI138);
var text_162854 = (makeNimstrLit("<span style=\"float: left;").slice(0,-1)).concat(deathStyle_162847.slice(0,-1),makeNimstrLit("\">").slice(0,-1),nickname_162846.slice(0,-1),makeNimstrLit("</span><span style=\"float: right;\">").slice(0,-1),nsuIntToStr(player_162844.score, 1).slice(0,-1),makeNimstrLit("</span>"));
result_162845 = nimCopy(null, text_162854, NTI138);
break BeforeRet;
} while (false); 
return result_162845;
}
function processMessage_162855(game_162857, data_162858) {

var Tmp4;
var msg_162859 = parseMessage_160035(data_162858);
switch (msg_162859.kind) {
case 2: console.log("Received ", msg_162859.count, " players");
game_162857.players = nimCopy(null, msg_162859.players, NTI160022);
game_162857.playersCount = msg_162859.count;
var count_162873 = cstrToNimstr(((game_162857.playersCount - 1))+"");
game_162857.playerCountElement.innerHTML = toJSStr((count_162873.slice(0,-1)).concat(makeNimstrLit(" others playing")));
L1: do {
var i_162891 = 0;
var res_162909 = 0;
L2: do {
L3: while (true) {
if (!(res_162909 <= 3)) break L3;
i_162891 = res_162909;
if ((i_162891 < (game_162857.players != null ? game_162857.players.length : 0))) {
var player_162900 = nimCopy(null, game_162857.players[i_162891], NTI160004);
game_162857.highScoreElements[i_162891].innerHTML = toJSStr(createHighScoreText_162842(player_162900));
if (player_162900.paused) {
Tmp4 = makeNimstrLit("#6d6d6d");
}
else {
Tmp4 = makeNimstrLit("#2d2d2d");
}

game_162857.highScoreElements[i_162891].style.color = toJSStr(Tmp4);
}
else {
game_162857.highScoreElements[i_162891].innerHTML = "";
}

res_162909 += 1;
}
} while(false);
} while(false);
game_162857.allTimeScoreElement.innerHTML = toJSStr(createHighScoreText_162842(msg_162859.top));

break;
case 0: case 1: 
break;
}
}
function connect_162930(game_162932) {

function colonanonymous__162933(e_162935) {

console.log("Connected to server");
var msg_162938 = createHelloMessage_160246(game_162932.nickname);
game_162932.socket.send(toJSStr(toJson_160108(msg_162938)));
}
function colonanonymous__162940(e_162942) {

processMessage_162855(game_162932, cstrToNimstr(e_162942.data));
}
function colonanonymous__162943(e_162945) {

function colonanonymous__162993() {

connect_162930(game_162932);
}
console.log("Server closed");
game_162932.players = nimCopy(null, [], NTI162963);
game_162932.playerCountElement.innerHTML = "disconnected";
L1: do {
var element_162990 = null;
var colontmp__163001 = [null, null, null, null, null];
colontmp__163001 = game_162932.highScoreElements;
var i_163004 = 0;
if ((i_163004 <= 4)) {
L2: do {
L3: while (true) {
if (!true) break L3;
element_162990 = colontmp__163001[i_163004];
element_162990.innerHTML = "";
if ((4 <= i_163004)) {
break L2;
}

i_163004 += 1;
}
} while(false);
}

} while(false);
console.log("Going to reconnect in 10 seconds");
window.setTimeout(colonanonymous__162993, 10000);
}
game_162932.socket = new WebSocket("ws://localhost:25473","snake");
game_162932.socket.onopen = colonanonymous__162933;
game_162932.socket.onmessage = colonanonymous__162940;
game_162932.socket.onclose = colonanonymous__162943;
}
function switchScene_163006(game_163008, scene_163009) {

function colonanonymous__163475(ev_163477) {

game_163008.nickname = nimCopy(null, cstrToNimstr(elements_163218[((elements_163218 != null ? elements_163218.length : 0) - 2)].value), NTI138);
switchScene_163006(game_163008, 1);
L1: do {
var element_163602 = null;
var i_163606 = 0;
var L_163608 = (elements_163218 != null ? elements_163218.length : 0);
L2: do {
L3: while (true) {
if (!(i_163606 < L_163608)) break L3;
element_163602 = elements_163218[i_163606];
element_163602.style.display = "none";
i_163606 += 1;
}
} while(false);
} while(false);
}
switch (scene_163009) {
case 0: var elements_163218 = nimCopy(null, [], NTI163217);
var snakeTextPos_163230 = {Field0: 1.1000000000000000e+02, Field1: 2.0000000000000000e+01};
if (elements_163218 != null) { elements_163218.push(createTextElement_163232(game_163008.renderer, makeNimstrLit("snake"), toPoint_38035(snakeTextPos_163230), makeNimstrLit("#000000"), 9.0000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00)); } else { elements_163218 = [createTextElement_163232(game_163008.renderer, makeNimstrLit("snake"), toPoint_38035(snakeTextPos_163230), makeNimstrLit("#000000"), 9.0000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00)]; };
var nameTextPos_163291 = {Field0: snakeTextPos_163230["Field0"], Field1: (snakeTextPos_163230["Field1"] + 1.0000000000000000e+02)};
if (elements_163218 != null) { elements_163218.push(createTextElement_163232(game_163008.renderer, makeNimstrLit("nick: "), toPoint_38035(nameTextPos_163291), makeNimstrLit("#000000"), 2.4000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00)); } else { elements_163218 = [createTextElement_163232(game_163008.renderer, makeNimstrLit("nick: "), toPoint_38035(nameTextPos_163291), makeNimstrLit("#000000"), 2.4000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00)]; };
var nameInputPos_163325 = {Field0: (nameTextPos_163291["Field0"] + 5.0000000000000000e+01), Field1: (nameTextPos_163291["Field1"] + 3.0000000000000000e+00)};
if (elements_163218 != null) { elements_163218.push(createTextBox_163328(game_163008.renderer, toPoint_38035(nameInputPos_163325), 8.0000000000000000e+01, 1.6000000000000000e+01, 1.2000000000000000e+01)); } else { elements_163218 = [createTextBox_163328(game_163008.renderer, toPoint_38035(nameInputPos_163325), 8.0000000000000000e+01, 1.6000000000000000e+01, 1.2000000000000000e+01)]; };
elements_163218[((elements_163218 != null ? elements_163218.length : 0) - 1)].style.backgroundColor = "transparent";
elements_163218[((elements_163218 != null ? elements_163218.length : 0) - 1)].style.border = "none";
elements_163218[((elements_163218 != null ? elements_163218.length : 0) - 1)].style.borderBottom = "2px solid black";
var playBtnPos_163396 = {Field0: (nameInputPos_163325["Field0"] + 9.0000000000000000e+01), Field1: nameInputPos_163325["Field1"]};
if (elements_163218 != null) { elements_163218.push(createButton_163398(game_163008.renderer, toPoint_38035(playBtnPos_163396), makeNimstrLit("play"), 6.0000000000000000e+01, 2.0000000000000000e+01, 1.8000000000000000e+01, makeNimstrLit("Snake"))); } else { elements_163218 = [createButton_163398(game_163008.renderer, toPoint_38035(playBtnPos_163396), makeNimstrLit("play"), 6.0000000000000000e+01, 2.0000000000000000e+01, 1.8000000000000000e+01, makeNimstrLit("Snake"))]; };
elements_163218[((elements_163218 != null ? elements_163218.length : 0) - 1)].style.backgroundColor = "black";
elements_163218[((elements_163218 != null ? elements_163218.length : 0) - 1)].style.color = "#b2bd08";
elements_163218[((elements_163218 != null ? elements_163218.length : 0) - 1)].style.border = "0";
elements_163218[((elements_163218 != null ? elements_163218.length : 0) - 1)].addEventListener("click", colonanonymous__163475, false);

break;
case 1: if (!((game_163008.onGameStart === null))) {
game_163008.onGameStart(game_163008);
}

if (isTouchDevice_78002()) {
setScaleToScreen_77598(game_163008.renderer, true);
}

var scoreTextPos_163622 = {Field0: 3.2500000000000000e+02, Field1: 1.0000000000000000e+01};
createTextElement_163232(game_163008.renderer, makeNimstrLit("score"), toPoint_38035(scoreTextPos_163622), makeNimstrLit("#000000"), 2.4000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00);
var scorePos_163646 = {Field0: 3.2500000000000000e+02, Field1: 3.5000000000000000e+01};
game_163008.scoreElement = createTextElement_163232(game_163008.renderer, makeNimstrLit("0000000"), toPoint_38035(scorePos_163646), makeNimstrLit("#000000"), 1.4000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00);
var allTimePos_163671 = {Field0: 3.1700000000000000e+02, Field1: 5.5000000000000000e+01};
game_163008.allTimeTextElement = createTextElement_163232(game_163008.renderer, makeNimstrLit("all time high score"), toPoint_38035(allTimePos_163671), makeNimstrLit("#b2bd08"), 1.0000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00);
var allTimeScorePos_163695 = {Field0: 3.1500000000000000e+02, Field1: (allTimePos_163671["Field1"] + 1.0000000000000000e+01)};
game_163008.allTimeScoreElement = createTextElement_163232(game_163008.renderer, makeNimstrLit(""), toPoint_38035(allTimeScorePos_163695), makeNimstrLit("#b2bd08"), 1.2000000000000000e+01, makeNimstrLit("Snake"), 7.0000000000000000e+01);
var messageTextPos_163719 = {Field0: 3.2300000000000000e+02, Field1: 8.5000000000000000e+01};
game_163008.messageElement = createTextElement_163232(game_163008.renderer, makeNimstrLit("game<br/>over"), toPoint_38035(messageTextPos_163719), makeNimstrLit("#000000"), 2.6000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00);
var playerCountPos_163745 = {Field0: 3.1500000000000000e+02, Field1: 1.5500000000000000e+02};
game_163008.playerCountElement = createTextElement_163232(game_163008.renderer, makeNimstrLit(""), toPoint_38035(playerCountPos_163745), makeNimstrLit("#1d1d1d"), 1.2000000000000000e+01, makeNimstrLit("Snake"), -1.0000000000000000e+00);
L1: do {
var i_163814 = 0;
var res_163861 = 0;
L2: do {
L3: while (true) {
if (!(res_163861 <= 4)) break L3;
i_163814 = res_163861;
var y_163815 = ((i_163814 * 1.5000000000000000e+01) + 5.5000000000000000e+01);
var pos_163820 = {Field0: 3.1500000000000000e+02, Field1: (scorePos_163646["Field1"] + y_163815)};
game_163008.highScoreElements[i_163814] = createTextElement_163232(game_163008.renderer, makeNimstrLit(""), toPoint_38035(pos_163820), makeNimstrLit("#2d2d2d"), 1.2000000000000000e+01, makeNimstrLit("Snake"), 7.0000000000000000e+01);
res_163861 += 1;
}
} while(false);
} while(false);
createFood_162913(game_163008, 0, 0);
connect_162930(game_163008);

break;
}
game_163008.scene = scene_163009;
}
function newGame_163865() {

var result_163867 = null;
randomize_60001();
result_163867 = {renderer: newRenderer2D_77218(makeNimstrLit("snake_canvas"), 400, 180, false), player: newSnake_162416(), players: [], scene: 0, food: [null, null], score: 0, lastUpdate: 0.0, lastBlink: 0.0, lastSpecial: 0.0, paused: false, blink: false, nextSpecial: 0.0, scoreElement: null, allTimeTextElement: null, allTimeScoreElement: null, messageElement: null, playerCountElement: null, highScoreElements: [null, null, null, null, null], playersCount: 0, socket: null, nickname: null, onGameStart: null};
switchScene_163006(result_163867, 0);
return result_163867;
}
function isNimException_12453() {

return lastJSError.m_type;}
function fromKeyCode_166018(keyCode_166020) {

var Tmp2;
var result_166021 = 0;
BeforeRet: do {
++excHandler;
Tmp2 = framePtr;
try {
result_166021 = keyCode_166020;
break BeforeRet;
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
framePtr = Tmp2;
if (lastJSError && (isObj(lastJSError.m_type, NTI3458))) {
result_166021 = -1;
break BeforeRet;
}
else {
reraiseException();
}
lastJSError = prevJSError;
} finally {
framePtr = Tmp2;
}
} while (false); 
return result_166021;
}
function len_163906(deq_163911) {

var result_163912 = 0;
result_163912 = deq_163911.count;
return result_163912;
}
function newSeq_164402(len_164406) {

var result_164408 = null;
result_164408 = new Array(len_164406); for (var i=0;i<len_164406;++i) {result_164408[i]=0;}return result_164408;
}
function expandIfNeeded_163924(deq_163930) {

var cap_163931 = (deq_163930.mask + 1);
if ((cap_163931 <= deq_163930.count)) {
var n_164419 = newSeq_164402((cap_163931 * 2));
L1: do {
var i_164450 = 0;
var x_164451 = 0;
var colontmp__164453 = {data: null, head: 0, tail: 0, count: 0, mask: 0};
colontmp__164453 = deq_163930;
var i_164457 = colontmp__164453.head;
L2: do {
var c_164459 = 0;
var colontmp__164461 = 0;
colontmp__164461 = colontmp__164453.count;
var i_164463 = 0;
L3: do {
L4: while (true) {
if (!(i_164463 < colontmp__164461)) break L4;
c_164459 = i_164463;
i_164450 = c_164459;
x_164451 = colontmp__164453.data[i_164457];
n_164419[i_164450] = x_164451;
i_164457 = ((i_164457 + 1) & colontmp__164453.mask);
i_164463 += 1;
}
} while(false);
} while(false);
} while(false);
deq_163930.data = n_164419;
deq_163930.mask = ((cap_163931 * 2) - 1);
deq_163930.tail = deq_163930.count;
deq_163930.head = 0;
}

}
function addLast_163914(deq_163920, item_163922) {

expandIfNeeded_163924(deq_163920);
deq_163920.count += 1;
deq_163920.data[deq_163920.tail] = item_163922;
deq_163920.tail = ((deq_163920.tail + 1) & deq_163920.mask);
}
function changeDirection_163891(game_163893, direction_163894) {

BeforeRet: do {
if (!((game_163893.scene == 1))) {
break BeforeRet;
}

if ((2 <= len_163906(game_163893.player.requestedDirections))) {
break BeforeRet;
}

addLast_163914(game_163893.player.requestedDirections, direction_163894);
} while (false); 
}
function createScoreUpdateMessage_160253(score_160255, alive_160256, paused_160257) {

var result_160258 = {kind: 0, nickname: null, score: 0, alive: false, paused: false, players: null, count: 0, top: {nickname: null, score: 0, alive: false, paused: false}};
nimCopy(result_160258, {kind: 1, score: score_160255, alive: alive_160256, paused: paused_160257, nickname: null, players: null, count: 0, top: {nickname: null, score: 0, alive: false, paused: false}}, NTI160006);
return result_160258;
}
function updateServer_165017(game_165019) {

var msg_165020 = createScoreUpdateMessage_160253(game_165019.score, game_165019.player.alive, game_165019.paused);
if ((game_165019.socket.readyState == 1)) {
game_165019.socket.send(toJSStr(toJson_160108(msg_165020)));
}

}
function togglePause_165965(game_165967) {

BeforeRet: do {
if (!((game_165967.scene == 1))) {
break BeforeRet;
}

if (!(game_165967.player.alive)) {
break BeforeRet;
}

game_165967.paused = !(game_165967.paused);
game_165967.messageElement.innerHTML = "paused";
updateServer_165017(game_165967);
} while (false); 
}
function updateScore_165031(game_165033) {

game_165033.scoreElement.innerHTML = toJSStr(nsuIntToStr(game_165033.score, 7));
updateServer_165017(game_165033);
}
function restart_165978(game_165980) {

game_165980.player = newSnake_162416();
game_165980.score = 0;
var msg_165981 = createHelloMessage_160246(game_165980.nickname);
game_165980.socket.send(toJSStr(toJson_160108(msg_165981)));
updateScore_165031(game_165980);
}
function onKeydown_168001(game_168003, ev_168004) {

console.log(ev_168004.keyCode);
var key_168014 = fromKeyCode_166018(ev_168004.keyCode);
console.log("Pressed: ", toJSStr(cstrToNimstr(NTI166003.node.sons[key_168014].name)));
var handled_168024 = true;
switch (key_168014) {
case 38: changeDirection_163891(game_168003, 0);

break;
case 39: changeDirection_163891(game_168003, 1);

break;
case 40: changeDirection_163891(game_168003, 2);

break;
case 37: changeDirection_163891(game_168003, 3);

break;
case 80: case 32: togglePause_165965(game_168003);

break;
case 78: restart_165978(game_168003);

break;
default: 
handled_168024 = false;
break;
}
if (handled_168024) {
ev_168004.preventDefault();
}

}
function X5BX5D__164495(deq_164501, i_164503) {

var result_164505 = [null, 0];
var result_164505_Idx = 0;
BeforeRet: do {
result_164505 = deq_164501.data; result_164505_Idx = ((deq_164501.head + i_164503) & deq_164501.mask);
break BeforeRet;
} while (false); 
return [result_164505, result_164505_Idx];
}
function getLastDirection_164474(game_164476) {

var Tmp1;
var result_164477 = 0;
result_164477 = game_164476.player.direction;
if ((0 < len_163906(game_164476.player.requestedDirections))) {
result_164477 = (Tmp1 = X5BX5D__164495(game_164476.player.requestedDirections, (len_163906(game_164476.player.requestedDirections) - 1)), Tmp1[0])[Tmp1[1]];
}

return result_164477;
}
function intersect_167020(rect_167025, p_167027) {

var Tmp1;
var Tmp2;
var Tmp3;
var result_167028 = false;
BeforeRet: do {
if (!(rect_167025.Field0 <= p_167027.x)) Tmp3 = false; else {Tmp3 = (p_167027.x <= (rect_167025.Field0 + rect_167025.Field2)); }if (!Tmp3) Tmp2 = false; else {Tmp2 = (rect_167025.Field1 <= p_167027.y); }if (!Tmp2) Tmp1 = false; else {Tmp1 = (p_167027.y <= (rect_167025.Field1 + rect_167025.Field3)); }result_167028 = Tmp1;
break BeforeRet;
} while (false); 
return result_167028;
}
function toPoint_38025(point_38028) {

var result_38031 = {x: 0, y: 0};
nimCopy(result_38031, {x: point_38028["Field0"], y: point_38028["Field1"]}, NTI38016);
return result_38031;
}
function detectTouch_167002(canvasId_167004, event_167005, lastDirection_167006) {

var result_167008 = {Field0: false, Field1: 0};
BeforeRet: do {
var snakeCanvas_167009 = document.getElementById(toJSStr(canvasId_167004));
var touch_167010 = event_167005.touches.item(0);
var canvasRect_167016 = {Field0: snakeCanvas_167009.offsetLeft, Field1: snakeCanvas_167009.offsetTop, Field2: snakeCanvas_167009.offsetWidth, Field3: snakeCanvas_167009.offsetHeight};
var touchPoint_167018 = {Field0: touch_167010.clientX, Field1: touch_167010.clientY};
if (intersect_167020(canvasRect_167016, toPoint_38025(touchPoint_167018))) {
switch (lastDirection_167006) {
case 0: case 2: var leftRect_167034 = {Field0: canvasRect_167016.Field0, Field1: canvasRect_167016.Field1, Field2: Math.floor(canvasRect_167016.Field2 / 2), Field3: canvasRect_167016.Field3};
var rightRect_167040 = {Field0: (leftRect_167034.Field0 + leftRect_167034.Field2), Field1: leftRect_167034.Field1, Field2: leftRect_167034.Field2, Field3: leftRect_167034.Field3};
var intersectsLeft_167051 = intersect_167020(leftRect_167034, toPoint_38025(touchPoint_167018));
var intersectsRight_167062 = intersect_167020(rightRect_167040, toPoint_38025(touchPoint_167018));
if ((intersectsLeft_167051 && intersectsRight_167062)) {
break BeforeRet;
}

if (intersectsLeft_167051) {
nimCopy(result_167008, {Field0: true, Field1: 3}, NTI167007);
break BeforeRet;
}

if (intersectsRight_167062) {
nimCopy(result_167008, {Field0: true, Field1: 1}, NTI167007);
break BeforeRet;
}


break;
case 1: case 3: var topRect_167070 = {Field0: canvasRect_167016.Field0, Field1: canvasRect_167016.Field1, Field2: canvasRect_167016.Field2, Field3: Math.floor(canvasRect_167016.Field3 / 2)};
var bottomRect_167076 = {Field0: topRect_167070.Field0, Field1: (topRect_167070.Field1 + topRect_167070.Field3), Field2: topRect_167070.Field2, Field3: topRect_167070.Field3};
var intersectsTop_167087 = intersect_167020(topRect_167070, toPoint_38025(touchPoint_167018));
var intersectsBottom_167098 = intersect_167020(bottomRect_167076, toPoint_38025(touchPoint_167018));
if ((intersectsTop_167087 && intersectsBottom_167098)) {
break BeforeRet;
}

if (intersectsTop_167087) {
nimCopy(result_167008, {Field0: true, Field1: 0}, NTI167007);
break BeforeRet;
}

if (intersectsBottom_167098) {
nimCopy(result_167008, {Field0: true, Field1: 2}, NTI167007);
break BeforeRet;
}


break;
}
}

} while (false); 
return result_167008;
}
function getScaleToScreen_77602(renderer_77604) {

var result_77605 = false;
result_77605 = renderer_77604.scaleToScreen;
return result_77605;
}
function isScaledToScreen_165982(game_165984) {

var result_165985 = false;
BeforeRet: do {
result_165985 = getScaleToScreen_77602(game_165984.renderer);
break BeforeRet;
} while (false); 
return result_165985;
}
function onTouch_168034(game_168036, ev_168037) {

var lastDir_168038 = getLastDirection_164474(game_168036);
var colontmp__168072 = {Field0: false, Field1: 0};
var touched_168039 = false;
var direction_168040 = 0;
nimCopy(colontmp__168072, detectTouch_167002(makeNimstrLit("snake_canvas"), ev_168037, lastDir_168038), NTI167007);
touched_168039 = colontmp__168072["Field0"];
direction_168040 = colontmp__168072["Field1"];
if (touched_168039) {
changeDirection_163891(game_168036, direction_168040);
}

if (isScaledToScreen_165982(game_168036)) {
ev_168037.preventDefault();
ev_168037.target.click();
}

}
function onGameStart_168052(game_168054) {

function colonanonymous__168055(ev_168057) {

onKeydown_168001(game_168054, ev_168057);
}
function colonanonymous__168061(ev_168063) {

onTouch_168034(game_168054, ev_168063);
}
window.addEventListener("keydown", colonanonymous__168055, false);
window.addEventListener("touchstart", colonanonymous__168061, {passive: false, capture: false, once: false});
}
function minuseq__57785(x_57790, x_57790_Idx, y_57792) {

x_57790[x_57790_Idx] = (x_57790[x_57790_Idx] - y_57792);
}
function getTickLength_165938(game_165940) {

var result_165941 = [0.0];
result_165941[0] = 2.0000000000000000e+02;
if (game_165940.player.alive) {
minuseq__57785(result_165941, 0, game_165940.score);
}

return result_165941[0];
}
function head_162625(snake_162627) {

var result_162628 = null;
result_162628 = snake_162627.body[0];
return result_162628;
}
function detectHeadCollision_164908(game_164910) {

var result_164911 = false;
BeforeRet: do {
L1: do {
var i_164937 = 0;
var colontmp__164951 = 0;
colontmp__164951 = (game_164910.player.body != null ? game_164910.player.body.length : 0) - 1;
var res_164954 = 1;
L2: do {
L3: while (true) {
if (!(res_164954 <= colontmp__164951)) break L3;
i_164937 = res_164954;
if (eqeq__162804(head_162625(game_164910.player).pos, game_164910.player.body[i_164937].pos)) {
result_164911 = true;
break BeforeRet;
}

res_164954 += 1;
}
} while(false);
} while(false);
} while (false); 
return result_164911;
}
function detectFoodCollision_164958(game_164960) {

var result_164961 = 0;
BeforeRet: do {
L1: do {
var i_164988 = 0;
var res_165013 = 0;
L2: do {
L3: while (true) {
if (!(res_165013 <= 1)) break L3;
i_164988 = res_165013;
L4: do {
if ((game_164960.food[i_164988] === null)) {
break L4;
}

if (eqeq__162804(game_164960.food[i_164988].pos, head_162625(game_164960.player).pos)) {
result_164961 = i_164988;
break BeforeRet;
}

} while(false);
res_165013 += 1;
}
} while(false);
} while(false);
result_164961 = -1;
break BeforeRet;
} while (false); 
return result_164961;
}
function copy_165047(point_165051) {

var result_165052 = {x: 0.0, y: 0.0};
BeforeRet: do {
nimCopy(result_165052, {x: point_165051.x, y: point_165051.y}, NTI38043);
break BeforeRet;
} while (false); 
return result_165052;
}
function eatFood_165034(game_165036, foodIndex_165037) {

var tailPos_165054 = copy_165047(game_165036.player.body[((game_165036.player.body != null ? game_165036.player.body.length : 0) - 1)].pos);
if (game_165036.player.body != null) { game_165036.player.body.push(newSnakeSegment_162155(tailPos_165054)); } else { game_165036.player.body = [newSnakeSegment_162155(tailPos_165054)]; };
switch (game_165036.food[foodIndex_165037].kind) {
case 0: game_165036.score += 1;
createFood_162913(game_165036, 0, 0);

break;
case 1: game_165036.score += 5;
game_165036.food[foodIndex_165037] = null;

break;
}
updateScore_165031(game_165036);
}
function popFirst_164615(deq_164621) {

var result_164622 = 0;
deq_164621.count -= 1;
result_164622 = deq_164621.data[deq_164621.head];
var v_164816 = 0;
deq_164621.data[deq_164621.head] = v_164816;
deq_164621.head = ((deq_164621.head + 1) & deq_164621.mask);
return result_164622;
}
function toPoint_164823(direction_164827) {

var Tmp1;
var result_164829 = {x: 0.0, y: 0.0};
switch (direction_164827) {
case 0: Tmp1 = toPoint_38035({Field0: 0.0, Field1: -1.0000000000000000e+00});

break;
case 1: Tmp1 = toPoint_38035({Field0: 1.0000000000000000e+00, Field1: 0.0});

break;
case 2: Tmp1 = toPoint_38035({Field0: 0.0, Field1: 1.0000000000000000e+00});

break;
case 3: Tmp1 = toPoint_38035({Field0: -1.0000000000000000e+00, Field1: 0.0});

break;
}
nimCopy(result_164829, Tmp1, NTI38043);
return result_164829;
}
function minus__164881(point_164885) {

var result_164886 = {x: 0.0, y: 0.0};
nimCopy(result_164886, toPoint_38035({Field0: -(point_164885.x), Field1: -(point_164885.y)}), NTI38043);
return result_164886;
}
function processDirections_164603(game_164605) {

L1: do {
L2: while (true) {
if (!(0 < len_163906(game_164605.player.requestedDirections))) break L2;
L3: do {
var direction_164819 = popFirst_164615(game_164605.player.requestedDirections);
if (eqeq__162804(toPoint_164823(game_164605.player.direction), minus__164881(toPoint_164823(direction_164819)))) {
break L3;
}

if (!((direction_164819 == game_164605.player.direction))) {
game_164605.player.direction = direction_164819;
break L1;
}

} while(false);
}
} while(false);
}
function pluseq__54704(x_54709, x_54709_Idx, y_54711) {

x_54709[x_54709_Idx] = (x_54709[x_54709_Idx] + y_54711);
}
function add_165288(point_165293, value_165295) {

pluseq__54704(point_165293, "x", value_165295.x);
pluseq__54704(point_165293, "y", value_165295.y);
}
function random_42327(max_42329) {

var result_42330 = 0.0;
var x_42332 = next_41846(state_41605[0]);
result_42330 = ((x_42332 / 4294967295) * max_42329);
return result_42330;
}
function random_165228(x_165233) {

var result_165234 = 0.0;
result_165234 = (random_42327((x_165233.b - x_165233.a)) + x_165233.a);
return result_165234;
}
function dotdot__165212(a_165216, b_165218) {

var result_165226 = {a: 0.0, b: 0.0};
result_165226.a = a_165216;
result_165226.b = b_165218;
return result_165226;
}
function updateFood_165083(game_165085) {

var Tmp1;
if (!((game_165085.food[1] === null))) {
game_165085.food[1].ticksLeft -= 1;
if ((game_165085.food[1].ticksLeft <= 0)) {
game_165085.food[1] = null;
}

}

if ((game_165085.nextSpecial == 0.0)) {
game_165085.lastSpecial = game_165085.lastUpdate;
game_165085.nextSpecial = random_165228(dotdot__165212(4.0000000000000000e+03, 3.0000000000000000e+04));
}

if (!(game_165085.nextSpecial <= (game_165085.lastUpdate - game_165085.lastSpecial))) Tmp1 = false; else {Tmp1 = (game_165085.food[1] === null); }if (Tmp1) {
game_165085.lastSpecial = game_165085.lastUpdate;
game_165085.nextSpecial = 0.0;
createFood_162913(game_165085, 1, 1);
}

}
function update_165246(game_165248) {

var Tmp1;
BeforeRet: do {
if (game_165248.paused) Tmp1 = true; else {Tmp1 = !((game_165248.scene == 1)); }if (Tmp1) {
break BeforeRet;
}

var headCollision_165259 = detectHeadCollision_164908(game_165248);
if (headCollision_165259) {
var wasAlive_165260 = game_165248.player.alive;
game_165248.player.alive = false;
game_165248.messageElement.innerHTML = "game<br/>over";
if (wasAlive_165260) {
updateServer_165017(game_165248);
}

break BeforeRet;
}

var foodCollision_165261 = detectFoodCollision_164958(game_165248);
if (!((foodCollision_165261 == -1))) {
eatFood_165034(game_165248, foodCollision_165261);
}

processDirections_164603(game_165248);
var oldPos_165272 = copy_165047(head_162625(game_165248.player).pos);
var movementVec_165283 = toPoint_164823(game_165248.player.direction);
add_165288(head_162625(game_165248.player).pos, movementVec_165283);
L2: do {
var i_165342 = 0;
var colontmp__165380 = 0;
colontmp__165380 = (game_165248.player.body != null ? game_165248.player.body.length : 0) - 1;
var res_165383 = 1;
L3: do {
L4: while (true) {
if (!(res_165383 <= colontmp__165380)) break L4;
i_165342 = res_165383;
var Tmp5 = game_165248.player.body[i_165342].pos; game_165248.player.body[i_165342].pos = oldPos_165272; oldPos_165272 = Tmp5;res_165383 += 1;
}
} while(false);
} while(false);
if ((3.0000000000000000e+01 <= head_162625(game_165248.player).pos.x)) {
head_162625(game_165248.player).pos.x = 0.0;
}
else {
if ((head_162625(game_165248.player).pos.x < 0.0)) {
head_162625(game_165248.player).pos.x = 3.0000000000000000e+01;
}
}
if ((1.8000000000000000e+01 <= head_162625(game_165248.player).pos.y)) {
head_162625(game_165248.player).pos.y = 0.0;
}
else {
if ((head_162625(game_165248.player).pos.y < 0.0)) {
head_162625(game_165248.player).pos.y = 1.8000000000000000e+01;
}
}
updateFood_165083(game_165248);
} while (false); 
}
function fillRect_165758(renderer_165765, x_165767, y_165769, width_165771, height_165773, style_165775) {

renderer_165765.context.fillStyle = toJSStr(style_165775);
renderer_165765.context.fillRect(x_165767, y_165769, width_165771, height_165773);
}
function drawMainMenu_165704(game_165706) {

}
function star__162402(point_162407, scalar_162409) {

var result_162411 = {x: 0.0, y: 0.0};
nimCopy(result_162411, toPoint_38035({Field0: (point_162407.x * scalar_162409), Field1: (point_162407.y * scalar_162409)}), NTI38043);
return result_162411;
}
function toPixelPos_162162(pos_162166) {

var result_162169 = {x: 0.0, y: 0.0};
BeforeRet: do {
nimCopy(result_162169, star__162402(pos_162166, 1.0000000000000000e+01), NTI38043);
break BeforeRet;
} while (false); 
return result_162169;
}
function extractRGB_61237(a_61239) {

var result_61246 = {Field0: 0, Field1: 0, Field2: 0};
result_61246.Field0 = (((a_61239 >>> 0) >>> 16) & 255);
result_61246.Field1 = (((a_61239 >>> 0) >>> 8) & 255);
result_61246.Field2 = (a_61239 & 255);
return result_61246;
}
function round_54664(x_54668, places_54670) {

var result_54671 = 0.0;
if ((places_54670 == 0)) {
result_54671 = Math.round(x_54668);
}
else {
var mult_54672 = Math.pow(1.0000000000000000e+01, places_54670);
result_54671 = (Math.round((x_54668 * mult_54672)) / mult_54672);
}

return result_54671;
}
function X5BX5Deq__165442(renderer_165446, pos_165448, color_165450) {

var image_165451 = renderer_165446.context.createImageData(1, 1);
var colontmp__168073 = {Field0: 0, Field1: 0, Field2: 0};
var r_165452 = 0;
var g_165453 = 0;
var b_165454 = 0;
nimCopy(colontmp__168073, extractRGB_61237(color_165450), NTI61240);
r_165452 = colontmp__168073["Field0"];
g_165453 = colontmp__168073["Field1"];
b_165454 = colontmp__168073["Field2"];
image_165451.data[0] = r_165452;
image_165451.data[1] = g_165453;
image_165451.data[2] = b_165454;
image_165451.data[3] = 255;
renderer_165446.context.putImageData(image_165451, round_54664(pos_165448["Field0"], 0), round_54664(pos_165448["Field1"], 0));
}
function drawFood_165391(game_165393, food_165394) {

var pos_165401 = toPixelPos_162162(food_165394.pos);
L1: do {
var x_165419 = 0;
var res_165509 = 0;
L2: do {
L3: while (true) {
if (!(res_165509 <= 9)) break L3;
x_165419 = res_165509;
L4: do {
var y_165437 = 0;
var res_165503 = 0;
L5: do {
L6: while (true) {
if (!(res_165503 <= 9)) break L6;
y_165437 = res_165503;
var index_165438 = (x_165419 + (y_165437 * 10));
var pos_165440 = {Field0: (pos_165401.x + x_165419), Field1: (pos_165401.y + y_165437)};
switch (food_165394.kind) {
case 0: if ((nibble_165395[index_165438] == 1)) {
X5BX5Deq__165442(game_165393.renderer, pos_165440, 0);
}


break;
case 1: if ((special_165398[index_165438] < food_165394.ticksLeft)) {
X5BX5Deq__165442(game_165393.renderer, pos_165440, 0);
}


break;
}
res_165503 += 1;
}
} while(false);
} while(false);
res_165509 += 1;
}
} while(false);
} while(false);
}
function angle_39597(direction_39599) {

var Tmp1;
var result_39600 = 0.0;
switch (direction_39599) {
case 0: Tmp1 = (slash__20807(3, 2) * 3.1415926535897931e+00);

break;
case 1: Tmp1 = 0.0;

break;
case 2: Tmp1 = 1.5707963267948966e+00;

break;
case 3: Tmp1 = 3.1415926535897931e+00;

break;
}
result_39600 = Tmp1;
return result_39600;
}
function plus__165523(point_165527, point2_165529) {

var result_165530 = {x: 0.0, y: 0.0};
nimCopy(result_165530, toPoint_38035({Field0: (point_165527.x + point2_165529.x), Field1: (point_165527.y + point2_165529.y)}), NTI38043);
return result_165530;
}
function rotate_165571(point_165576, radians_165578, origin_165581) {

var result_165583 = {x: 0.0, y: 0.0};
var ca_165584 = Math.cos(radians_165578);
var sa_165585 = Math.sin(radians_165578);
var xTrans_165586 = (point_165576.x - origin_165581.x);
var yTrans_165587 = (point_165576.y - origin_165581.y);
nimCopy(result_165583, {x: (((xTrans_165586 * ca_165584) - (yTrans_165587 * sa_165585)) + origin_165581.x), y: (((xTrans_165586 * sa_165585) + (yTrans_165587 * ca_165584)) + origin_165581.y)}, NTI38043);
return result_165583;
}
function X5BX5Deq__165670(renderer_165674, pos_165676, color_165678) {

X5BX5Deq__165442(renderer_165674, {Field0: pos_165676.x, Field1: pos_165676.y}, color_165678);
}
function drawEyes_165513(game_165515) {

var angle_165516 = angle_39597(game_165515.player.direction);
var headPos_165520 = toPixelPos_162162(head_162625(game_165515.player).pos);
var headMiddle_165532 = plus__165523(headPos_165520, toPoint_38035({Field0: slash__20807(9, 2), Field1: slash__20807(9, 2)}));
var eyeTop_165535 = toPoint_38035({Field0: (headPos_165520.x + 5.0000000000000000e+00), Field1: (headPos_165520.y + 2.0000000000000000e+00)});
var eyeBot_165538 = toPoint_38035({Field0: (headPos_165520.x + 5.0000000000000000e+00), Field1: (headPos_165520.y + 6.0000000000000000e+00)});
L1: do {
var eye_165567 = {x: 0.0, y: 0.0};
var i_165703 = 0;
if ((i_165703 <= 1)) {
L2: do {
L3: while (true) {
if (!true) break L3;
eye_165567 = [eyeTop_165535, eyeBot_165538][i_165703];
var rect_165641 = nimCopy(null, [rotate_165571(toPoint_38035({Field0: eye_165567.x, Field1: eye_165567.y}), angle_165516, headMiddle_165532), rotate_165571(toPoint_38035({Field0: (eye_165567.x + 1.0000000000000000e+00), Field1: eye_165567.y}), angle_165516, headMiddle_165532), rotate_165571(toPoint_38035({Field0: eye_165567.x, Field1: (eye_165567.y + 1.0000000000000000e+00)}), angle_165516, headMiddle_165532), rotate_165571(toPoint_38035({Field0: (eye_165567.x + 1.0000000000000000e+00), Field1: (eye_165567.y + 1.0000000000000000e+00)}), angle_165516, headMiddle_165532)], NTI165568);
L4: do {
var point_165668 = {x: 0.0, y: 0.0};
var i_165700 = 0;
if ((i_165700 <= 3)) {
L5: do {
L6: while (true) {
if (!true) break L6;
point_165668 = rect_165641[i_165700];
X5BX5Deq__165670(game_165515.renderer, point_165668, 16777215);
if ((3 <= i_165700)) {
break L5;
}

i_165700 += 1;
}
} while(false);
}

} while(false);
if ((1 <= i_165703)) {
break L2;
}

i_165703 += 1;
}
} while(false);
}

} while(false);
}
function strokeRect_165819(renderer_165826, x_165828, y_165830, width_165832, height_165834, style_165836, lineWidth_165838) {

renderer_165826.context.strokeStyle = toJSStr(style_165836);
renderer_165826.context.lineWidth = lineWidth_165838;
renderer_165826.context.strokeRect(x_165828, y_165830, width_165832, height_165834);
}
function drawGame_165707(game_165709) {

var Tmp1;
var Tmp5;
var Tmp12;
var Tmp13;
if (!(game_165709.player.alive)) Tmp1 = true; else {Tmp1 = game_165709.paused; }var showMessage_165710 = Tmp1;
L2: do {
var i_165720 = 0;
var res_165893 = 0;
L3: do {
L4: while (true) {
if (!(res_165893 <= 1)) break L4;
i_165720 = res_165893;
if (!((game_165709.food[i_165720] === null))) {
drawFood_165391(game_165709, game_165709.food[i_165720]);
}

res_165893 += 1;
}
} while(false);
} while(false);
if (!game_165709.blink) Tmp5 = false; else {Tmp5 = showMessage_165710; }if (!(Tmp5)) {
L6: do {
var i_165754 = 0;
var colontmp__165899 = 0;
colontmp__165899 = (game_165709.player.body != null ? game_165709.player.body.length : 0) - 1;
var res_165902 = 0;
L7: do {
L8: while (true) {
if (!(res_165902 <= colontmp__165899)) break L8;
i_165754 = res_165902;
var segment_165755 = game_165709.player.body[i_165754];
var pos_165756 = toPixelPos_162162(segment_165755.pos);
fillRect_165758(game_165709.renderer, pos_165756.x, pos_165756.y, 1.0000000000000000e+01, 1.0000000000000000e+01, makeNimstrLit("#000000"));
res_165902 += 1;
}
} while(false);
} while(false);
drawEyes_165513(game_165709);
}

fillRect_165758(game_165709.renderer, 3.0000000000000000e+02, 0.0, 1.0000000000000000e+02, 1.8000000000000000e+02, makeNimstrLit("#b2bd08"));
strokeRect_165819(game_165709.renderer, 3.0000000000000000e+02, 5.0000000000000000e+00, 9.5000000000000000e+01, 1.7000000000000000e+02, makeNimstrLit("#000000"), 2);
fillRect_165758(game_165709.renderer, 3.0000000000000000e+02, 5.3000000000000000e+01, 9.5000000000000000e+01, 2.5000000000000000e+01, makeNimstrLit("#000000"));
L9: do {
var element_165889 = null;
var colontmp__165909 = [null, null, null, null, null];
colontmp__165909 = game_165709.highScoreElements;
var i_165912 = 0;
if ((i_165912 <= 4)) {
L10: do {
L11: while (true) {
if (!true) break L11;
element_165889 = colontmp__165909[i_165912];
if (showMessage_165710) {
Tmp12 = makeNimstrLit("none");
}
else {
Tmp12 = makeNimstrLit("block");
}

element_165889.style.display = toJSStr(Tmp12);
if ((4 <= i_165912)) {
break L10;
}

i_165912 += 1;
}
} while(false);
}

} while(false);
if (!game_165709.blink) Tmp13 = false; else {Tmp13 = showMessage_165710; }if (Tmp13) {
game_165709.messageElement.style.display = "block";
}
else {
game_165709.messageElement.style.display = "none";
}

}
function draw_165913(game_165915, lag_165916) {

fillRect_165758(game_165915.renderer, 0.0, 0.0, 4.0000000000000000e+02, 1.8000000000000000e+02, makeNimstrLit("#b2bd08"));
switch (game_165915.scene) {
case 0: drawMainMenu_165704(game_165915);

break;
case 1: drawGame_165707(game_165915);

break;
}
}
function nextFrame_165953(game_165955, frameTime_165956) {

var elapsedTime_165957 = (frameTime_165956 - game_165955.lastUpdate);
var ticks_165958 = (Math.floor((elapsedTime_165957 / getTickLength_165938(game_165955)))|0);
var lag_165959 = ((elapsedTime_165957 / getTickLength_165938(game_165955)) - ticks_165958);
if ((getTickLength_165938(game_165955) < elapsedTime_165957)) {
game_165955.lastUpdate = frameTime_165956;
update_165246(game_165955);
}

var elapsedBlinkTime_165960 = (frameTime_165956 - game_165955.lastBlink);
if ((8.0000000000000000e+02 < elapsedBlinkTime_165960)) {
game_165955.lastBlink = frameTime_165956;
game_165955.blink = !(game_165955.blink);
}

draw_165913(game_165955, lag_165959);
}
function onTick_168041(game_168043, time_168044) {

function colonanonymous__168045(time_168047) {

onTick_168041(game_168043, time_168047);
}
var reqId_168051 = window.requestAnimationFrame(colonanonymous__168045);
nextFrame_165953(game_168043, time_168044);
}
function onLoad() {

var game_168070 = newGame_163865();
game_168070.onGameStart = onGameStart_168052;
onTick_168041(game_168070, 1.6000000000000000e+01);
}
